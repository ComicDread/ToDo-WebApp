{"ast":null,"code":"var _s = $RefreshSig$();\nimport { GET_TASKS } from \"../../queries/query\";\nimport { useMutation, useQuery } from '@apollo/client';\nconst currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\nconst currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\nasync function RemoveAllTasks() {\n  _s();\n  const {\n    data: tasksData\n  } = useQuery(GET_TASKS, {\n    variables: {\n      token: currentUserToken,\n      userName: currentUserName\n    }\n  });\n  const taskIds = tasksData.tasks.map(task => task.id);\n  await deleteAllTasksMutation({\n    variables: {\n      token: currentUserToken,\n      id: taskIds\n    },\n    update: cache => {\n      cache.writeQuery({\n        query: GET_TASKS,\n        variables: {\n          token: currentUserToken,\n          userName: currentUserName\n        },\n        data: {\n          tasks: []\n        }\n      });\n    }\n  });\n}\n_s(RemoveAllTasks, \"atuPChRRujOSyiA6gqfCB0TasCU=\", false, function () {\n  return [useQuery];\n});\n_c = RemoveAllTasks;\nexport default RemoveAllTasks;\nvar _c;\n$RefreshReg$(_c, \"RemoveAllTasks\");","map":{"version":3,"names":["GET_TASKS","useMutation","useQuery","currentUserToken","JSON","parse","localStorage","getItem","currentUserName","RemoveAllTasks","_s","data","tasksData","variables","token","userName","taskIds","tasks","map","task","id","deleteAllTasksMutation","update","cache","writeQuery","query","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo/client/src/components/functions/RemoveAllTasks.js"],"sourcesContent":["import { GET_TASKS } from \"../../queries/query\";\nimport  { useMutation,useQuery } from '@apollo/client'\n\nconst currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\nconst currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n\n\nasync function RemoveAllTasks() {\n    const { data: tasksData } = useQuery(GET_TASKS,{    \n      variables: {\n      token: currentUserToken,\n      userName: currentUserName\n    }\n  });\n    const taskIds = tasksData.tasks.map((task) => task.id);\n    await deleteAllTasksMutation({\n      variables: {\n        token: currentUserToken,\n        id: taskIds\n      },\n      update: (cache) => {\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: [] }, \n        });\n      },\n    });\n  }\n\nexport default RemoveAllTasks"],"mappings":";AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAAUC,WAAW,EAACC,QAAQ,QAAQ,gBAAgB;AAEtD,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;AACxE,MAAMC,eAAe,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAG3E,eAAeE,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM;IAAEC,IAAI,EAAEC;EAAU,CAAC,GAAGV,QAAQ,CAACF,SAAS,EAAC;IAC7Ca,SAAS,EAAE;MACXC,KAAK,EAAEX,gBAAgB;MACvBY,QAAQ,EAAEP;IACZ;EACF,CAAC,CAAC;EACA,MAAMQ,OAAO,GAAGJ,SAAS,CAACK,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAAC;EACtD,MAAMC,sBAAsB,CAAC;IAC3BR,SAAS,EAAE;MACTC,KAAK,EAAEX,gBAAgB;MACvBiB,EAAE,EAAEJ;IACN,CAAC;IACDM,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACC,UAAU,CAAC;QACfC,KAAK,EAAEzB,SAAS;QAChBa,SAAS,EAAE;UACTC,KAAK,EAAEX,gBAAgB;UACvBY,QAAQ,EAAEP;QACZ,CAAC;QACDG,IAAI,EAAE;UAAEM,KAAK,EAAE;QAAG;MACpB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ;AAACP,EAAA,CAxBYD,cAAc;EAAA,QACGP,QAAQ;AAAA;AAAAwB,EAAA,GADzBjB,cAAc;AA0B7B,eAAeA,cAAc;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}