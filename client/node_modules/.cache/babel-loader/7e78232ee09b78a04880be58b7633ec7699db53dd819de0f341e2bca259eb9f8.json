{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.2/client/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TASKS = gql`\n  query tasks {\n    tasks {\n      name\n      done\n      id\n    }\n  }\n`;\nconst GET_USER = gql`\n  query users {\n    users {\n      name\n      token\n      tasks{\n        name\n        done\n        id\n      }\n    }\n  }\n`;\nconst NEW_USER = gql`\n  mutation newUser($token: String!, $name: String!) {\n    newUser(token: $token, name: $name) {\n      name\n      token\n      tasks {\n        name\n        done\n        id\n      }\n    }\n  }\n`;\nexport default function Login() {\n  _s();\n  var _userData$users;\n  const navigate = useNavigate();\n  const {\n    data: tasksData\n  } = useQuery(GET_TASKS);\n  const {\n    data: userData\n  } = useQuery(GET_USER);\n  const [newUserMutation] = useMutation(NEW_USER);\n  const [currentUserToken, setCurrentUserToken] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState(null);\n  const [currentUserImg, setCurrentUserImg] = useState(null);\n  const users = (_userData$users = userData === null || userData === void 0 ? void 0 : userData.users) !== null && _userData$users !== void 0 ? _userData$users : [];\n  useEffect(() => {\n    console.log('user:' + currentUserToken);\n  });\n  const handleSuccess = async credentialResponse => {\n    var decoded = jwt_decode(credentialResponse.credential);\n    const existingUser = users.find(user => user.token === decoded.sub);\n    if (!existingUser) {\n      await newUserMutation({\n        variables: {\n          token: decoded.sub,\n          name: decoded.name\n        },\n        update: (cache, _ref) => {\n          let {\n            data\n          } = _ref;\n          const existingUsers = cache.readQuery({\n            query: GET_USER\n          });\n          const newUser = {\n            token: data.newUser.token,\n            name: data.newUser.name,\n            done: false,\n            tasks: data.newUser.tasks\n          };\n          const updatedUsers = [...existingUsers.users, newUser];\n          cache.writeQuery({\n            query: GET_USER,\n            data: {\n              users: updatedUsers\n            }\n          });\n        },\n        fetchPolicy: 'no-cache' // Aggiungi questa opzione per eseguire una richiesta fresca\n      });\n    }\n\n    localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n    localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n    localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n    navigate('/');\n  };\n  const handleError = () => {\n    console.log('Login Failed');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"signInButton\",\n    children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n      clientId: \"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleSuccess,\n        onError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"BzD0eo79Z1a282YmeV8X7soHAe0=\", false, function () {\n  return [useNavigate, useQuery, useQuery, useMutation];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["GoogleLogin","GoogleOAuthProvider","jwt_decode","useState","useEffect","useNavigate","useQuery","gql","useMutation","jsxDEV","_jsxDEV","GET_TASKS","GET_USER","NEW_USER","Login","_s","_userData$users","navigate","data","tasksData","userData","newUserMutation","currentUserToken","setCurrentUserToken","currentUserName","setCurrentUserName","currentUserImg","setCurrentUserImg","users","console","log","handleSuccess","credentialResponse","decoded","credential","existingUser","find","user","token","sub","variables","name","update","cache","_ref","existingUsers","readQuery","query","newUser","done","tasks","updatedUsers","writeQuery","fetchPolicy","localStorage","setItem","JSON","stringify","given_name","picture","handleError","id","children","clientId","onSuccess","onError","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.2/client/src/components/Login.js"],"sourcesContent":["import { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport {useQuery,gql,useMutation} from '@apollo/client'\n\nconst GET_TASKS = gql`\n  query tasks {\n    tasks {\n      name\n      done\n      id\n    }\n  }\n`;\n\nconst GET_USER = gql`\n  query users {\n    users {\n      name\n      token\n      tasks{\n        name\n        done\n        id\n      }\n    }\n  }\n`;\n\nconst NEW_USER = gql`\n  mutation newUser($token: String!, $name: String!) {\n    newUser(token: $token, name: $name) {\n      name\n      token\n      tasks {\n        name\n        done\n        id\n      }\n    }\n  }\n`;\n\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const { data: tasksData } = useQuery(GET_TASKS)\n  const { data: userData} = useQuery(GET_USER)\n  const [newUserMutation] = useMutation(NEW_USER)\n  const [currentUserToken, setCurrentUserToken] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState(null);\n  const [currentUserImg, setCurrentUserImg] = useState(null);\n\n  const users = userData?.users ?? []; \n\n  useEffect(() => {\n    console.log('user:' + currentUserToken);\n  },);\n\n\n  const handleSuccess = async (credentialResponse) => {\n    var decoded = jwt_decode(credentialResponse.credential);\n    const existingUser = users.find((user) => user.token === decoded.sub);\n    if (!existingUser) {\n      await newUserMutation({\n        variables: {\n          token: decoded.sub,\n          name: decoded.name,\n        },\n        update: (cache, { data }) => {\n          const existingUsers = cache.readQuery({ query: GET_USER });\n          const newUser = {\n            token: data.newUser.token,\n            name: data.newUser.name,\n            done: false,\n            tasks: data.newUser.tasks,\n          };\n          const updatedUsers = [...existingUsers.users, newUser];\n          cache.writeQuery({\n            query: GET_USER,\n            data: { users: updatedUsers },\n          });\n        },\n        fetchPolicy: 'no-cache', // Aggiungi questa opzione per eseguire una richiesta fresca\n      });\n    }\n    localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n    localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n    localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n    navigate('/');\n  };\n  \n  \n  \n  \n  const handleError = () => {\n    console.log('Login Failed');\n  };\n\n  \n\n  return (\n    <div id=\"signInButton\">\n        <GoogleOAuthProvider clientId=\"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\">\n          <GoogleLogin onSuccess={handleSuccess} onError={handleError} />\n        </GoogleOAuthProvider>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}