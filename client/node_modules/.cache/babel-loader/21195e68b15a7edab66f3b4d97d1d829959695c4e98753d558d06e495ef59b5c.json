{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.2/client/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TASKS = gql`\n  query tasks {\n    tasks {\n      name\n      done\n      id\n    }\n  }\n`;\nconst GET_USERS = gql`\n  query users {\n    users {\n      name\n      token\n      tasks{\n        name\n        done\n        id\n      }\n    }\n  }\n`;\nconst GET_USER = gql`\n  query user($token: String!) {\n    user(token: $token) {\n      name\n      token\n      tasks {\n        name\n        done\n        id\n      } \n    }\n  }\n`;\nconst NEW_USER = gql`\n  mutation newUser($token:String! $name:String! $tasks:[userInput]) {\n    newUser(token:$token name:$name tasks:$tasks) {\n      name\n      token\n      tasks{\n      name\n      done\n      id\n    }\n    }\n  }\n`;\nexport default function Login() {\n  _s();\n  var _usersData$users;\n  const navigate = useNavigate();\n  const {\n    data: tasksData\n  } = useQuery(GET_TASKS);\n  const {\n    data: usersData\n  } = useQuery(GET_USERS);\n  const {\n    data: userData\n  } = useQuery(GET_USER);\n  const [newUserMutation] = useMutation(NEW_USER);\n  const [currentUserToken, setCurrentUserToken] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState(null);\n  const [currentUserImg, setCurrentUserImg] = useState(null);\n  const users = (_usersData$users = usersData === null || usersData === void 0 ? void 0 : usersData.users) !== null && _usersData$users !== void 0 ? _usersData$users : [];\n  useEffect(() => {\n    console.log('user:' + currentUserToken);\n  });\n  const handleSuccess = async credentialResponse => {\n    var _usersData$users2;\n    var decoded = jwt_decode(credentialResponse.credential);\n    const users = (_usersData$users2 = usersData === null || usersData === void 0 ? void 0 : usersData.users) !== null && _usersData$users2 !== void 0 ? _usersData$users2 : [];\n    const tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    const existingUser = users.find(users => users.token === decoded.sub); //chatgpt\n    if (!existingUser) {\n      const tasksWithoutTypename = tasks.map(_ref => {\n        let {\n          __typename,\n          ...rest\n        } = _ref;\n        return rest;\n      }); //chatgpt\n      await newUserMutation({\n        variables: {\n          token: decoded.sub,\n          name: decoded.name,\n          tasks: tasksWithoutTypename\n        },\n        update: (cache, _ref2) => {\n          let {\n            data\n          } = _ref2;\n          const existingUser = cache.readQuery({\n            query: GET_USERS\n          });\n          const newUser = {\n            token: data.newUser.token,\n            name: data.newUser.name,\n            done: false,\n            tasks: data.newUser.tasks\n          };\n          const updatedUser = [...existingUser.users, newUser];\n          cache.writeQuery({\n            query: GET_USERS,\n            data: {\n              users: updatedUser\n            }\n          });\n        }\n      });\n    }\n    localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n    localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n    localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n    navigate('/');\n  };\n  const handleError = () => {\n    console.log('Login Failed');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"signInButton\",\n    children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n      clientId: \"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleSuccess,\n        onError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"WIU3FjeyaE/oTulrt5/qexVadqw=\", false, function () {\n  return [useNavigate, useQuery, useQuery, useQuery, useMutation];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["GoogleLogin","GoogleOAuthProvider","jwt_decode","useState","useEffect","useNavigate","useQuery","gql","useMutation","jsxDEV","_jsxDEV","GET_TASKS","GET_USERS","GET_USER","NEW_USER","Login","_s","_usersData$users","navigate","data","tasksData","usersData","userData","newUserMutation","currentUserToken","setCurrentUserToken","currentUserName","setCurrentUserName","currentUserImg","setCurrentUserImg","users","console","log","handleSuccess","credentialResponse","_usersData$users2","decoded","credential","tasks","JSON","parse","localStorage","getItem","existingUser","find","token","sub","tasksWithoutTypename","map","_ref","__typename","rest","variables","name","update","cache","_ref2","readQuery","query","newUser","done","updatedUser","writeQuery","setItem","stringify","given_name","picture","handleError","id","children","clientId","onSuccess","onError","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.2/client/src/components/Login.js"],"sourcesContent":["import { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport {useQuery,gql,useMutation} from '@apollo/client'\n\nconst GET_TASKS = gql`\n  query tasks {\n    tasks {\n      name\n      done\n      id\n    }\n  }\n`;\n\nconst GET_USERS = gql`\n  query users {\n    users {\n      name\n      token\n      tasks{\n        name\n        done\n        id\n      }\n    }\n  }\n`;\n\nconst GET_USER = gql`\n  query user($token: String!) {\n    user(token: $token) {\n      name\n      token\n      tasks {\n        name\n        done\n        id\n      } \n    }\n  }\n`;\n\nconst NEW_USER = gql`\n  mutation newUser($token:String! $name:String! $tasks:[userInput]) {\n    newUser(token:$token name:$name tasks:$tasks) {\n      name\n      token\n      tasks{\n      name\n      done\n      id\n    }\n    }\n  }\n`;\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const { data: tasksData } = useQuery(GET_TASKS)\n  const { data: usersData} = useQuery(GET_USERS)\n  const { data: userData} = useQuery(GET_USER)\n  const [newUserMutation] = useMutation(NEW_USER)\n  const [currentUserToken, setCurrentUserToken] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState(null);\n  const [currentUserImg, setCurrentUserImg] = useState(null);\n\n  const users = usersData?.users ?? []; \n\n  useEffect(() => {\n    console.log('user:' + currentUserToken);\n  },);\n\n\n  const handleSuccess = async (credentialResponse) => {\n    var decoded = jwt_decode(credentialResponse.credential);\n    const users = usersData?.users ?? []; \n    const tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    const existingUser = users.find((users) => users.token === decoded.sub);      //chatgpt\n    if (!existingUser) {\n      const tasksWithoutTypename = tasks.map(({ __typename, ...rest }) => rest);  //chatgpt\n      await newUserMutation({\n        variables: {\n          token: decoded.sub,\n          name: decoded.name,\n          tasks: tasksWithoutTypename,\n        },\n        update: (cache, { data }) => {\n          const existingUser = cache.readQuery({ query: GET_USERS });\n          const newUser = {\n            token: data.newUser.token,\n            name: data.newUser.name,\n            done: false,\n            tasks: data.newUser.tasks,\n          };\n          const updatedUser = [...existingUser.users, newUser];\n          cache.writeQuery({\n            query: GET_USERS,\n            data: { users: updatedUser }\n          });\n        }\n      });\n    }\n    localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n    localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n    localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n    navigate('/');\n  };\n  \n  \n  \n  const handleError = () => {\n    console.log('Login Failed');\n  };\n\n  \n\n  return (\n    <div id=\"signInButton\">\n        <GoogleOAuthProvider clientId=\"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\">\n          <GoogleLogin onSuccess={handleSuccess} onError={handleError} />\n        </GoogleOAuthProvider>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}