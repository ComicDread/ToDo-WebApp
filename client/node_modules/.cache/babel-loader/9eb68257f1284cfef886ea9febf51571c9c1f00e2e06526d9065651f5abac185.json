{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { CHECK_USER, GET_TASKS } from '../../queries/query';\nimport { useQuery, useMutation } from '@apollo/client';\nconst currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\nconst currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\nconst {\n  data: tasksData\n} = useQuery(GET_TASKS, {\n  variables: {\n    token: currentUserToken,\n    userName: currentUserName\n  }\n});\nasync function HandleDeleteAccount() {\n  _s();\n  const [deleteUserMutation] = useMutation(DELETE_USER);\n  const navigate = useNavigate();\n  const taskIds = tasksData.tasks.map(task => task.id);\n  const token = currentUserToken;\n  deleteUserMutation({\n    variables: {\n      token: currentUserToken,\n      id: taskIds\n    },\n    update: cache => {\n      cache.writeQuery({\n        query: CHECK_USER,\n        variables: {\n          token: token\n        },\n        data: {\n          CheckUser: {}\n        }\n      });\n      cache.writeQuery({\n        query: GET_TASKS,\n        variables: {\n          token: currentUserToken,\n          userName: currentUserName\n        },\n        data: {\n          tasks: []\n        }\n      });\n    }\n  });\n  localStorage.setItem('currentUser', JSON.stringify(null));\n  localStorage.setItem('currentUserName', JSON.stringify(null));\n  localStorage.setItem('currentUserImg', JSON.stringify(null));\n  navigate('/login');\n}\n_s(HandleDeleteAccount, \"QDv3wnEm6jdCBK8dlbaB8QL13tA=\", false, function () {\n  return [useMutation, useNavigate];\n});\n_c = HandleDeleteAccount;\nexport default HandleDeleteAccount;\nvar _c;\n$RefreshReg$(_c, \"HandleDeleteAccount\");","map":{"version":3,"names":["useNavigate","CHECK_USER","GET_TASKS","useQuery","useMutation","currentUserToken","JSON","parse","localStorage","getItem","currentUserName","data","tasksData","variables","token","userName","HandleDeleteAccount","_s","deleteUserMutation","DELETE_USER","navigate","taskIds","tasks","map","task","id","update","cache","writeQuery","query","CheckUser","setItem","stringify","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo/client/src/components/functions/HandleDeleteAccount.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { CHECK_USER,GET_TASKS } from '../../queries/query';\nimport {useQuery,useMutation} from '@apollo/client'\n\nconst currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\nconst currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\nconst { data: tasksData } = useQuery(GET_TASKS,{    \n  variables: {\n  token: currentUserToken,\n  userName: currentUserName\n}\n});\n\nasync function HandleDeleteAccount(){\n    const [deleteUserMutation] = useMutation(DELETE_USER)\n    const navigate = useNavigate();\n    const taskIds = tasksData.tasks.map((task) => task.id);\n    const token = currentUserToken\n    deleteUserMutation({\n      variables: {\n        token: currentUserToken,\n        id: taskIds\n      },\n      update: (cache) => {\n        cache.writeQuery({\n          query: CHECK_USER,\n          variables: {token:token},\n          data: { CheckUser: {} },\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: [] }, \n        });\n      },\n    })\n    localStorage.setItem('currentUser', JSON.stringify(null));\n    localStorage.setItem('currentUserName', JSON.stringify(null));\n    localStorage.setItem('currentUserImg', JSON.stringify(null));\n    navigate('/login')\n  }\n\n\n  export default HandleDeleteAccount"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,EAACC,SAAS,QAAQ,qBAAqB;AAC1D,SAAQC,QAAQ,EAACC,WAAW,QAAO,gBAAgB;AAEnD,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;AACxE,MAAMC,eAAe,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC3E,MAAM;EAAEE,IAAI,EAAEC;AAAU,CAAC,GAAGT,QAAQ,CAACD,SAAS,EAAC;EAC7CW,SAAS,EAAE;IACXC,KAAK,EAAET,gBAAgB;IACvBU,QAAQ,EAAEL;EACZ;AACA,CAAC,CAAC;AAEF,eAAeM,mBAAmBA,CAAA,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,kBAAkB,CAAC,GAAGd,WAAW,CAACe,WAAW,CAAC;EACrD,MAAMC,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAMqB,OAAO,GAAGT,SAAS,CAACU,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAAC;EACtD,MAAMX,KAAK,GAAGT,gBAAgB;EAC9Ba,kBAAkB,CAAC;IACjBL,SAAS,EAAE;MACTC,KAAK,EAAET,gBAAgB;MACvBoB,EAAE,EAAEJ;IACN,CAAC;IACDK,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACC,UAAU,CAAC;QACfC,KAAK,EAAE5B,UAAU;QACjBY,SAAS,EAAE;UAACC,KAAK,EAACA;QAAK,CAAC;QACxBH,IAAI,EAAE;UAAEmB,SAAS,EAAE,CAAC;QAAE;MACxB,CAAC,CAAC;MACFH,KAAK,CAACC,UAAU,CAAC;QACfC,KAAK,EAAE3B,SAAS;QAChBW,SAAS,EAAE;UACTC,KAAK,EAAET,gBAAgB;UACvBU,QAAQ,EAAEL;QACZ,CAAC;QACDC,IAAI,EAAE;UAAEW,KAAK,EAAE;QAAG;MACpB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EACFd,YAAY,CAACuB,OAAO,CAAC,aAAa,EAAEzB,IAAI,CAAC0B,SAAS,CAAC,IAAI,CAAC,CAAC;EACzDxB,YAAY,CAACuB,OAAO,CAAC,iBAAiB,EAAEzB,IAAI,CAAC0B,SAAS,CAAC,IAAI,CAAC,CAAC;EAC7DxB,YAAY,CAACuB,OAAO,CAAC,gBAAgB,EAAEzB,IAAI,CAAC0B,SAAS,CAAC,IAAI,CAAC,CAAC;EAC5DZ,QAAQ,CAAC,QAAQ,CAAC;AACpB;AAACH,EAAA,CA9BYD,mBAAmB;EAAA,QACDZ,WAAW,EACvBJ,WAAW;AAAA;AAAAiC,EAAA,GAFjBjB,mBAAmB;AAiChC,eAAeA,mBAAmB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}