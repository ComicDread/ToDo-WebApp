{"ast":null,"code":"function AddTask(taskName) {\n  addTaskMutation({\n    variables: {\n      input: {\n        name: taskName\n      },\n      token: currentUserToken,\n      userName: currentUserName\n    },\n    update: (cache, _ref) => {\n      let {\n        data\n      } = _ref;\n      const existingTasks = cache.readQuery({\n        query: GET_TASKS,\n        variables: {\n          token: currentUserToken,\n          userName: currentUserName\n        }\n      });\n      const newTask = {\n        userName: currentUserName,\n        token: currentUserToken,\n        taskName: data.newTask.taskName,\n        done: false,\n        id: data.newTask.id\n      };\n      const updatedTasks = [...existingTasks.tasks, newTask];\n      cache.writeQuery({\n        query: GET_TASKS,\n        variables: {\n          token: currentUserToken,\n          userName: currentUserName\n        },\n        data: {\n          tasks: updatedTasks\n        }\n      });\n    }\n  });\n}\n_c = AddTask;\nexport default AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["AddTask","taskName","addTaskMutation","variables","input","name","token","currentUserToken","userName","currentUserName","update","cache","_ref","data","existingTasks","readQuery","query","GET_TASKS","newTask","done","id","updatedTasks","tasks","writeQuery","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo/client/src/components/functions/AddTask.js"],"sourcesContent":["function AddTask(taskName) {\n    addTaskMutation({\n      variables: {\n        input: {\n          name: taskName\n        },\n        token: currentUserToken,\n        userName: currentUserName\n      },\n      update: (cache, { data }) => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const newTask = {\n          userName: currentUserName,\n          token: currentUserToken,\n          taskName: data.newTask.taskName,\n          done: false,\n          id: data.newTask.id\n        };\n        const updatedTasks = [...existingTasks.tasks, newTask];\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: updatedTasks }\n        });\n      },\n    });\n  }\n\nexport default AddTask"],"mappings":"AAAA,SAASA,OAAOA,CAACC,QAAQ,EAAE;EACvBC,eAAe,CAAC;IACdC,SAAS,EAAE;MACTC,KAAK,EAAE;QACLC,IAAI,EAAEJ;MACR,CAAC;MACDK,KAAK,EAAEC,gBAAgB;MACvBC,QAAQ,EAAEC;IACZ,CAAC;IACDC,MAAM,EAAEA,CAACC,KAAK,EAAAC,IAAA,KAAe;MAAA,IAAb;QAAEC;MAAK,CAAC,GAAAD,IAAA;MACtB,MAAME,aAAa,GAAGH,KAAK,CAACI,SAAS,CAAC;QACpCC,KAAK,EAAEC,SAAS;QAChBd,SAAS,EAAE;UACTG,KAAK,EAAEC,gBAAgB;UACvBC,QAAQ,EAAEC;QACZ;MACF,CAAC,CAAC;MACF,MAAMS,OAAO,GAAG;QACdV,QAAQ,EAAEC,eAAe;QACzBH,KAAK,EAAEC,gBAAgB;QACvBN,QAAQ,EAAEY,IAAI,CAACK,OAAO,CAACjB,QAAQ;QAC/BkB,IAAI,EAAE,KAAK;QACXC,EAAE,EAAEP,IAAI,CAACK,OAAO,CAACE;MACnB,CAAC;MACD,MAAMC,YAAY,GAAG,CAAC,GAAGP,aAAa,CAACQ,KAAK,EAAEJ,OAAO,CAAC;MACtDP,KAAK,CAACY,UAAU,CAAC;QACfP,KAAK,EAAEC,SAAS;QAChBd,SAAS,EAAE;UACTG,KAAK,EAAEC,gBAAgB;UACvBC,QAAQ,EAAEC;QACZ,CAAC;QACDI,IAAI,EAAE;UAAES,KAAK,EAAED;QAAa;MAC9B,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ;AAACG,EAAA,GAnCMxB,OAAO;AAqChB,eAAeA,OAAO;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}