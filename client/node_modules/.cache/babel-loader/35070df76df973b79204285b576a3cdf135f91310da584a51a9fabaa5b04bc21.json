{"ast":null,"code":"import { GET_TASKS, DELETE_TASKS } from \"../../queries/query\";\nimport { useMutation, useQuery } from '@apollo/client';\nconst [deleteAllTasksMutation] = useMutation(DELETE_TASKS);\nconst {\n  data: tasksData\n} = useQuery(GET_TASKS, {\n  variables: {\n    token: currentUserToken,\n    userName: currentUserName\n  }\n});\nconst currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\nconst currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\nasync function RemoveAllTasks() {\n  const taskIds = tasksData.tasks.map(task => task.id);\n  await deleteAllTasksMutation({\n    variables: {\n      token: currentUserToken,\n      id: taskIds\n    },\n    update: cache => {\n      cache.writeQuery({\n        query: GET_TASKS,\n        variables: {\n          token: currentUserToken,\n          userName: currentUserName\n        },\n        data: {\n          tasks: []\n        }\n      });\n    }\n  });\n}\n_c = RemoveAllTasks;\nexport default RemoveAllTasks;\nvar _c;\n$RefreshReg$(_c, \"RemoveAllTasks\");","map":{"version":3,"names":["GET_TASKS","DELETE_TASKS","useMutation","useQuery","deleteAllTasksMutation","data","tasksData","variables","token","currentUserToken","userName","currentUserName","JSON","parse","localStorage","getItem","RemoveAllTasks","taskIds","tasks","map","task","id","update","cache","writeQuery","query","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo/client/src/components/functions/RemoveAllTasks.js"],"sourcesContent":["import  { GET_TASKS,DELETE_TASKS } from \"../../queries/query\";\nimport  { useMutation,useQuery } from '@apollo/client'\n\nconst [deleteAllTasksMutation] = useMutation(DELETE_TASKS)\nconst { data: tasksData } = useQuery(GET_TASKS,{    \n  variables: {\n  token: currentUserToken,\n  userName: currentUserName\n}\n});\n\nconst currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\nconst currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n\n\nasync function RemoveAllTasks() {\n  const taskIds = tasksData.tasks.map((task) => task.id);\n  await deleteAllTasksMutation({\n    variables: {\n      token: currentUserToken,\n      id: taskIds\n    },\n    update: (cache) => {\n      cache.writeQuery({\n        query: GET_TASKS,\n        variables: {\n          token: currentUserToken,\n          userName: currentUserName\n        },\n        data: { tasks: [] }, \n      });\n    },\n  });\n}\n\nexport default RemoveAllTasks"],"mappings":"AAAA,SAAUA,SAAS,EAACC,YAAY,QAAQ,qBAAqB;AAC7D,SAAUC,WAAW,EAACC,QAAQ,QAAQ,gBAAgB;AAEtD,MAAM,CAACC,sBAAsB,CAAC,GAAGF,WAAW,CAACD,YAAY,CAAC;AAC1D,MAAM;EAAEI,IAAI,EAAEC;AAAU,CAAC,GAAGH,QAAQ,CAACH,SAAS,EAAC;EAC7CO,SAAS,EAAE;IACXC,KAAK,EAAEC,gBAAgB;IACvBC,QAAQ,EAAEC;EACZ;AACA,CAAC,CAAC;AAEF,MAAMF,gBAAgB,GAAGG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;AACxE,MAAMJ,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAG3E,eAAeC,cAAcA,CAAA,EAAG;EAC9B,MAAMC,OAAO,GAAGX,SAAS,CAACY,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAAC;EACtD,MAAMjB,sBAAsB,CAAC;IAC3BG,SAAS,EAAE;MACTC,KAAK,EAAEC,gBAAgB;MACvBY,EAAE,EAAEJ;IACN,CAAC;IACDK,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACC,UAAU,CAAC;QACfC,KAAK,EAAEzB,SAAS;QAChBO,SAAS,EAAE;UACTC,KAAK,EAAEC,gBAAgB;UACvBC,QAAQ,EAAEC;QACZ,CAAC;QACDN,IAAI,EAAE;UAAEa,KAAK,EAAE;QAAG;MACpB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ;AAACQ,EAAA,GAlBcV,cAAc;AAoB7B,eAAeA,cAAc;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}