{"ast":null,"code":"var _s = $RefreshSig$();\nimport { GET_TASKS, TASK_SORTED } from \"../../queries/query\";\nimport { useState } from \"react\";\nimport { useMutation } from '@apollo/client';\nconst currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\nconst currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\nfunction HandleSorted() {\n  _s();\n  const [sortedTasks, setSortedTasks] = useState([]);\n  const [getTasks] = useMutation(TASK_SORTED);\n  getTasks({\n    variables: {\n      token: currentUserToken,\n      userName: currentUserName\n    },\n    update: (cache, _ref) => {\n      let {\n        data\n      } = _ref;\n      const sorted = data.getSortedTasks;\n      setSortedTasks(sorted);\n      cache.writeQuery({\n        query: GET_TASKS,\n        variables: {\n          token: currentUserToken,\n          userName: currentUserName\n        },\n        data: {\n          tasks: sorted\n        }\n      });\n    }\n  });\n}\n_s(HandleSorted, \"LXPr65Vg4tfkChrPxqfLnvJ+JRI=\", false, function () {\n  return [useMutation];\n});\n_c = HandleSorted;\nexport default HandleSorted;\nvar _c;\n$RefreshReg$(_c, \"HandleSorted\");","map":{"version":3,"names":["GET_TASKS","TASK_SORTED","useState","useMutation","currentUserToken","JSON","parse","localStorage","getItem","currentUserName","HandleSorted","_s","sortedTasks","setSortedTasks","getTasks","variables","token","userName","update","cache","_ref","data","sorted","getSortedTasks","writeQuery","query","tasks","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo/client/src/components/functions/HandleSorted.js"],"sourcesContent":["import { GET_TASKS,TASK_SORTED } from \"../../queries/query\";\nimport { useState } from \"react\";\nimport { useMutation } from '@apollo/client'\n\nconst currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\nconst currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n\nfunction HandleSorted() {\n  const [sortedTasks, setSortedTasks] = useState([]);\n  const [getTasks] = useMutation(TASK_SORTED)\n\n    getTasks({\n      variables: {\n        token: currentUserToken,\n        userName: currentUserName\n      },\n      update: (cache, { data }) => {\n        const sorted = data.getSortedTasks;\n        setSortedTasks(sorted); \n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: sorted }\n        });\n      }\n    })\n  }\n\nexport default HandleSorted"],"mappings":";AAAA,SAASA,SAAS,EAACC,WAAW,QAAQ,qBAAqB;AAC3D,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;AACxE,MAAMC,eAAe,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAE3E,SAASE,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,QAAQ,CAAC,GAAGX,WAAW,CAACF,WAAW,CAAC;EAEzCa,QAAQ,CAAC;IACPC,SAAS,EAAE;MACTC,KAAK,EAAEZ,gBAAgB;MACvBa,QAAQ,EAAER;IACZ,CAAC;IACDS,MAAM,EAAEA,CAACC,KAAK,EAAAC,IAAA,KAAe;MAAA,IAAb;QAAEC;MAAK,CAAC,GAAAD,IAAA;MACtB,MAAME,MAAM,GAAGD,IAAI,CAACE,cAAc;MAClCV,cAAc,CAACS,MAAM,CAAC;MACtBH,KAAK,CAACK,UAAU,CAAC;QACfC,KAAK,EAAEzB,SAAS;QAChBe,SAAS,EAAE;UACTC,KAAK,EAAEZ,gBAAgB;UACvBa,QAAQ,EAAER;QACZ,CAAC;QACDY,IAAI,EAAE;UAAEK,KAAK,EAAEJ;QAAO;MACxB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ;AAACX,EAAA,CAtBMD,YAAY;EAAA,QAEAP,WAAW;AAAA;AAAAwB,EAAA,GAFvBjB,YAAY;AAwBrB,eAAeA,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}