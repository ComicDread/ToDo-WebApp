{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login/client/src/components/DeleteAll.js\",\n  _s = $RefreshSig$();\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TASKS = gql`\n  query tasks($token: String!) {\n    tasks(token: $token) {\n      userName\n      token\n      taskName\n      done\n      id\n    }\n  }\n`;\nconst DELETE_TASK = gql`\n  mutation deletedTask($id: ID!, $token: String!) {\n    deletedTask(id: $id, token: $token) \n  }\n`;\nexport default function ExpoButton() {\n  _s();\n  const [deletedTaskMutation] = useMutation(DELETE_TASK);\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const {\n    data: tasksData\n  } = useQuery(GET_TASKS, {\n    variables: {\n      token: currentUserToken,\n      userName: currentUserName\n    }\n  });\n  async function removeAllTasks() {\n    const taskIds = tasksData.tasks.map(task => task.id);\n    for (const taskId of taskIds) {\n      await deletedTaskMutation({\n        variables: {\n          id: taskId,\n          token: currentUserToken\n        },\n        update: cache => {\n          const existingTasks = cache.readQuery({\n            query: GET_TASKS,\n            variables: {\n              token: currentUserToken,\n              userName: currentUserName\n            }\n          });\n          const updatedTasks = existingTasks.tasks.filter(t => t.id !== taskId);\n          cache.writeQuery({\n            query: GET_TASKS,\n            variables: {\n              token: currentUserToken,\n              userName: currentUserName\n            },\n            data: {\n              tasks: updatedTasks\n            }\n          });\n        }\n      });\n    }\n    console.log(`Tutte le tasks sono state eliminate.`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"DeleteAllButton\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      onClick: removeAllTasks,\n      className: \"DeleteAllButton\",\n      height: \"1em\",\n      viewBox: \"0 0 448 512\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n_s(ExpoButton, \"9EZSS0HZq26M8LfLUAp0Dm+dscg=\", false, function () {\n  return [useMutation, useQuery];\n});\n_c = ExpoButton;\nvar _c;\n$RefreshReg$(_c, \"ExpoButton\");","map":{"version":3,"names":["useQuery","gql","useMutation","jsxDEV","_jsxDEV","GET_TASKS","DELETE_TASK","ExpoButton","_s","deletedTaskMutation","currentUserToken","JSON","parse","localStorage","getItem","currentUserName","data","tasksData","variables","token","userName","removeAllTasks","taskIds","tasks","map","task","id","taskId","update","cache","existingTasks","readQuery","query","updatedTasks","filter","t","writeQuery","console","log","className","children","xmlns","onClick","height","viewBox","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login/client/src/components/DeleteAll.js"],"sourcesContent":["import {useQuery,gql,useMutation} from '@apollo/client'\n\nconst GET_TASKS = gql`\n  query tasks($token: String!) {\n    tasks(token: $token) {\n      userName\n      token\n      taskName\n      done\n      id\n    }\n  }\n`;\n\nconst DELETE_TASK = gql`\n  mutation deletedTask($id: ID!, $token: String!) {\n    deletedTask(id: $id, token: $token) \n  }\n`;\n\nexport default function ExpoButton(){\n    const [deletedTaskMutation] = useMutation(DELETE_TASK)\n    const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n    const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n    const { data: tasksData } = useQuery(GET_TASKS,{    \n        variables: {\n        token: currentUserToken,\n        userName: currentUserName\n      }\n    });\n\n    async function removeAllTasks() {\n        const taskIds = tasksData.tasks.map((task) => task.id);\n        \n        for (const taskId of taskIds) {\n          await deletedTaskMutation({\n            variables: {\n              id: taskId,\n              token: currentUserToken\n            },\n            update: (cache) => {\n              const existingTasks = cache.readQuery({\n                query: GET_TASKS,\n                variables: {\n                  token: currentUserToken,\n                  userName: currentUserName\n                }\n              });\n              const updatedTasks = existingTasks.tasks.filter((t) => t.id !== taskId);\n              cache.writeQuery({\n                query: GET_TASKS,\n                variables: {\n                  token: currentUserToken,\n                  userName: currentUserName\n                },\n                data: { tasks: updatedTasks }\n              });\n            },\n          });\n        }\n      \n        console.log(`Tutte le tasks sono state eliminate.`);\n      }\n      \n      \n    return(\n      <button className=\"DeleteAllButton\" >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" onClick={removeAllTasks} className=\"DeleteAllButton\" height=\"1em\" viewBox=\"0 0 448 512\">\n         <path d=\"M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z\"/></svg>\n      </button>   \n    )\n}"],"mappings":";;AAAA,SAAQA,QAAQ,EAACC,GAAG,EAACC,WAAW,QAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,SAAS,GAAGJ,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,WAAW,GAAGL,GAAI;AACxB;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASM,UAAUA,CAAA,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,mBAAmB,CAAC,GAAGP,WAAW,CAACI,WAAW,CAAC;EACtD,MAAMI,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;EACxE,MAAMC,eAAe,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;EAC3E,MAAM;IAAEE,IAAI,EAAEC;EAAU,CAAC,GAAGjB,QAAQ,CAACK,SAAS,EAAC;IAC3Ca,SAAS,EAAE;MACXC,KAAK,EAAET,gBAAgB;MACvBU,QAAQ,EAAEL;IACZ;EACF,CAAC,CAAC;EAEF,eAAeM,cAAcA,CAAA,EAAG;IAC5B,MAAMC,OAAO,GAAGL,SAAS,CAACM,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAAC;IAEtD,KAAK,MAAMC,MAAM,IAAIL,OAAO,EAAE;MAC5B,MAAMb,mBAAmB,CAAC;QACxBS,SAAS,EAAE;UACTQ,EAAE,EAAEC,MAAM;UACVR,KAAK,EAAET;QACT,CAAC;QACDkB,MAAM,EAAGC,KAAK,IAAK;UACjB,MAAMC,aAAa,GAAGD,KAAK,CAACE,SAAS,CAAC;YACpCC,KAAK,EAAE3B,SAAS;YAChBa,SAAS,EAAE;cACTC,KAAK,EAAET,gBAAgB;cACvBU,QAAQ,EAAEL;YACZ;UACF,CAAC,CAAC;UACF,MAAMkB,YAAY,GAAGH,aAAa,CAACP,KAAK,CAACW,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACT,EAAE,KAAKC,MAAM,CAAC;UACvEE,KAAK,CAACO,UAAU,CAAC;YACfJ,KAAK,EAAE3B,SAAS;YAChBa,SAAS,EAAE;cACTC,KAAK,EAAET,gBAAgB;cACvBU,QAAQ,EAAEL;YACZ,CAAC;YACDC,IAAI,EAAE;cAAEO,KAAK,EAAEU;YAAa;UAC9B,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;IAEAI,OAAO,CAACC,GAAG,CAAE,sCAAqC,CAAC;EACrD;EAGF,oBACElC,OAAA;IAAQmC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eACjCpC,OAAA;MAAKqC,KAAK,EAAC,4BAA4B;MAACC,OAAO,EAAErB,cAAe;MAACkB,SAAS,EAAC,iBAAiB;MAACI,MAAM,EAAC,KAAK;MAACC,OAAO,EAAC,aAAa;MAAAJ,QAAA,eAC9HpC,OAAA;QAAMyC,CAAC,EAAC;MAAgQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3Q,CAAC;AAEf;AAACzC,EAAA,CAnDuBD,UAAU;EAAA,QACAL,WAAW,EAGbF,QAAQ;AAAA;AAAAkD,EAAA,GAJhB3C,UAAU;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}