{"ast":null,"code":"var _s = $RefreshSig$();\nimport { TASK_SORTED_NOT_DONE, GET_TASKS } from \"../../queries/query\";\nimport { useState } from \"react\";\nconst currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\nconst currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\nconst [sortedTasks, setSortedTasks] = useState([]);\nfunction handleNotDone() {\n  _s();\n  const [getTasksNotDone] = useMutation(TASK_SORTED_NOT_DONE);\n  getTasksNotDone({\n    variables: {\n      token: currentUserToken,\n      userName: currentUserName\n    },\n    update: (cache, _ref) => {\n      let {\n        data\n      } = _ref;\n      const sorted = data.getSortedByNotDone;\n      setSortedTasks(sorted);\n      cache.writeQuery({\n        query: GET_TASKS,\n        variables: {\n          token: currentUserToken,\n          userName: currentUserName\n        },\n        data: {\n          tasks: sorted\n        }\n      });\n    }\n  });\n}\n_s(handleNotDone, \"pmVtV2CO/h84/qrRUb1fUBN2PE8=\", true);\nexport default handleNotDone;","map":{"version":3,"names":["TASK_SORTED_NOT_DONE","GET_TASKS","useState","currentUserToken","JSON","parse","localStorage","getItem","currentUserName","sortedTasks","setSortedTasks","handleNotDone","_s","getTasksNotDone","useMutation","variables","token","userName","update","cache","_ref","data","sorted","getSortedByNotDone","writeQuery","query","tasks"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo/client/src/components/functions/HandleNotDone.js"],"sourcesContent":["import { TASK_SORTED_NOT_DONE,GET_TASKS } from \"../../queries/query\";\nimport  { useState } from \"react\";\n\nconst currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\nconst currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\nconst [sortedTasks, setSortedTasks] = useState([]);\n\nfunction handleNotDone() {\n  \n  const [getTasksNotDone] = useMutation(TASK_SORTED_NOT_DONE)\n    getTasksNotDone({\n      variables: {\n        token: currentUserToken,\n        userName: currentUserName\n      },\n      update: (cache, { data }) => {\n        const sorted = data.getSortedByNotDone;\n        setSortedTasks(sorted); \n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: sorted }\n        });\n      }\n    })\n  }\n\n  export default handleNotDone"],"mappings":";AAAA,SAASA,oBAAoB,EAACC,SAAS,QAAQ,qBAAqB;AACpE,SAAUC,QAAQ,QAAQ,OAAO;AAEjC,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;AACxE,MAAMC,eAAe,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC3E,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;AAElD,SAASS,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAEvB,MAAM,CAACC,eAAe,CAAC,GAAGC,WAAW,CAACd,oBAAoB,CAAC;EACzDa,eAAe,CAAC;IACdE,SAAS,EAAE;MACTC,KAAK,EAAEb,gBAAgB;MACvBc,QAAQ,EAAET;IACZ,CAAC;IACDU,MAAM,EAAEA,CAACC,KAAK,EAAAC,IAAA,KAAe;MAAA,IAAb;QAAEC;MAAK,CAAC,GAAAD,IAAA;MACtB,MAAME,MAAM,GAAGD,IAAI,CAACE,kBAAkB;MACtCb,cAAc,CAACY,MAAM,CAAC;MACtBH,KAAK,CAACK,UAAU,CAAC;QACfC,KAAK,EAAExB,SAAS;QAChBc,SAAS,EAAE;UACTC,KAAK,EAAEb,gBAAgB;UACvBc,QAAQ,EAAET;QACZ,CAAC;QACDa,IAAI,EAAE;UAAEK,KAAK,EAAEJ;QAAO;MACxB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ;AAACV,EAAA,CArBMD,aAAa;AAuBpB,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}