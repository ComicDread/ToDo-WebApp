{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo 1.1/client/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport { gql } from '@apollo/client';\nimport client from '../index';\nimport userimage from './icons/UserImg.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHECK_USER = gql`\n  query CheckUser($_id: ID!) {\n    CheckUser(_id: $_id) {\n      _id\n      userName\n      password\n      email\n    }\n  }\n`;\nexport default function Login() {\n  _s();\n  const navigate = useNavigate();\n  const [currentUserUid, setCurrentUserUid] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState(null);\n  const [currentUserImg, setCurrentUserImg] = useState(null);\n  const [isUserRegistered, setIsUserRegistered] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const userImg = userimage;\n  const [showPasswordInput, setShowPasswordInput] = useState(false); // Aggiungiamo uno stato per mostrare/nascondere il campo di input della password\n\n  useEffect(() => {\n    console.log('user:' + currentUserUid);\n  });\n  const handleSuccess = async credentialResponse => {\n    var decoded = jwt_decode(credentialResponse.credential);\n    const Uid = decoded.sub;\n    const {\n      data\n    } = await client.query({\n      query: CHECK_USER,\n      variables: {\n        _id: Uid\n      }\n    });\n    if (!data.CheckUser || data.CheckUser.password !== password) {\n      setIsUserRegistered(false);\n    } else {\n      localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n      localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n      localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n      localStorage.setItem('LoggedWithGoogle', JSON.stringify(true));\n      setIsUserRegistered(true);\n      navigate('/');\n    }\n  };\n  const handleUserData = async () => {\n    const _id = email;\n    const {\n      data\n    } = await client.query({\n      query: CHECK_USER,\n      variables: {\n        _id\n      }\n    });\n\n    // Se l'utente esiste nel database, procediamo con il controllo della password\n    if (data.CheckUser) {\n      const {\n        data: authData\n      } = await client.query({\n        query: AUTHENTICATE_USER,\n        variables: {\n          _id,\n          password\n        }\n      });\n\n      // authData.authUser conterrÃ  il flag booleano true o false in base all'autenticazione\n      if (authData.authUser) {\n        const userName = data.CheckUser.userName;\n        localStorage.setItem('currentUser', JSON.stringify(_id));\n        localStorage.setItem('LoggedWithLocal', JSON.stringify(true));\n        localStorage.setItem('currentUserName', JSON.stringify(userName));\n        localStorage.setItem('currentUserImg', JSON.stringify(userImg));\n        setIsUserRegistered(true);\n        setShowPasswordInput(false); // Dopo aver effettuato l'accesso con successo, nascondiamo il campo della password\n        navigate('/');\n      } else {\n        setIsUserRegistered(false);\n      }\n    } else {\n      setIsUserRegistered(false);\n    }\n  };\n  const handleError = () => {\n    console.log('Login Failed');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input-field\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleUserData,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-text\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"google-label\",\n        children: \"O accedi con Google...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signInButton\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [isUserRegistered === false && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red',\n          position: 'absolute',\n          top: '9.15em'\n        },\n        children: \"User not registered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n        clientId: \"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleSuccess,\n          onError: handleError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"LAaJAbZPddedNW1s+mtzV2iSfEY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["GoogleLogin","GoogleOAuthProvider","jwt_decode","useState","useEffect","useNavigate","gql","client","userimage","jsxDEV","_jsxDEV","CHECK_USER","Login","_s","navigate","currentUserUid","setCurrentUserUid","currentUserName","setCurrentUserName","currentUserImg","setCurrentUserImg","isUserRegistered","setIsUserRegistered","email","setEmail","password","setPassword","userImg","showPasswordInput","setShowPasswordInput","console","log","handleSuccess","credentialResponse","decoded","credential","Uid","sub","data","query","variables","_id","CheckUser","localStorage","setItem","JSON","stringify","given_name","picture","handleUserData","authData","AUTHENTICATE_USER","authUser","userName","handleError","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","id","style","display","justifyContent","alignItems","color","position","top","clientId","onSuccess","onError","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo 1.1/client/src/components/Login.js"],"sourcesContent":["import { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport  {gql} from '@apollo/client'\nimport client from '../index'\nimport userimage from './icons/UserImg.svg'\n\nconst CHECK_USER = gql`\n  query CheckUser($_id: ID!) {\n    CheckUser(_id: $_id) {\n      _id\n      userName\n      password\n      email\n    }\n  }\n`;\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const [currentUserUid, setCurrentUserUid] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState(null);\n  const [currentUserImg, setCurrentUserImg] = useState(null);\n  const [isUserRegistered, setIsUserRegistered] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const userImg = userimage\n  const [showPasswordInput, setShowPasswordInput] = useState(false); // Aggiungiamo uno stato per mostrare/nascondere il campo di input della password\n\n\n  useEffect(() => {\n    console.log('user:' + currentUserUid);\n  },);\n\n  const handleSuccess = async (credentialResponse) => {\n    var decoded = jwt_decode(credentialResponse.credential);\n    const Uid = decoded.sub;\n    const { data } = await client.query({\n      query: CHECK_USER,\n      variables: { _id: Uid }\n    })\n    if (!data.CheckUser || data.CheckUser.password !== password) {\n      setIsUserRegistered(false);\n    } else {\n      localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n      localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n      localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n      localStorage.setItem('LoggedWithGoogle', JSON.stringify(true));\n      setIsUserRegistered(true);\n      navigate('/');\n    }\n  };\n  \n\n  const handleUserData = async () => {\n    const _id = email;\n    const { data } = await client.query({\n      query: CHECK_USER,\n      variables: { _id },\n    });\n\n    // Se l'utente esiste nel database, procediamo con il controllo della password\n    if (data.CheckUser) {\n      const { data: authData } = await client.query({\n        query: AUTHENTICATE_USER,\n        variables: { _id, password },\n      });\n\n      // authData.authUser conterrÃ  il flag booleano true o false in base all'autenticazione\n      if (authData.authUser) {\n        const userName = data.CheckUser.userName;\n        localStorage.setItem('currentUser', JSON.stringify(_id));\n        localStorage.setItem('LoggedWithLocal', JSON.stringify(true));\n        localStorage.setItem('currentUserName', JSON.stringify(userName));\n        localStorage.setItem('currentUserImg', JSON.stringify(userImg));\n        setIsUserRegistered(true);\n        setShowPasswordInput(false); // Dopo aver effettuato l'accesso con successo, nascondiamo il campo della password\n        navigate('/');\n      } else {\n        setIsUserRegistered(false);\n      }\n    } else {\n      setIsUserRegistered(false);\n    }\n  };\n\n   \n  const handleError = () => {\n    console.log('Login Failed');\n  };\n\n  return (\n    <div>\n    <div className='input-container'>\n      <label className='input-label'>Email</label>\n      <input\n      type='text'\n      className='input-field'\n      value={email}\n      onChange={(e) => setEmail(e.target.value)}\n      />\n    </div>\n    <div className='input-container'>\n      <label className='input-label'>Password</label>\n      <input\n        type='password'\n        className='input-field'\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n    </div>\n      <div className='button-container'>\n      <button className='submit-button' onClick={handleUserData}>Submit</button>\n      </div>\n      <div className='center-text'>\n        <label className='google-label'>O accedi con Google...</label>\n      </div>\n      <div id=\"signInButton\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n        {isUserRegistered === false && <p style={{ color: 'red', position: 'absolute', top: '9.15em' }}>User not registered</p>}\n        <GoogleOAuthProvider clientId=\"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\">\n          <GoogleLogin onSuccess={handleSuccess} onError={handleError} />\n        </GoogleOAuthProvider>\n      </div>\n    </div>\n  );\n  \n  \n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}