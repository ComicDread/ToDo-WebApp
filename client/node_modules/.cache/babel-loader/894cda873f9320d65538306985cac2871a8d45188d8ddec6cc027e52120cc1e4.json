{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login/client/src/App.js\",\n  _s2 = $RefreshSig$();\nimport './App.css';\nimport Task from './Task';\nimport React from 'react';\nimport TaskForm from './TaskForm';\nimport { useEffect, useState } from \"react\";\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { googleLogout } from '@react-oauth/google';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst GET_TASKS = gql`\n  query tasks($token: String!) {\n    tasks(token: $token) {\n      userName\n      token\n      taskName\n      done\n      id\n    }\n  }\n`;\nconst ADD_TASK = gql`\n  mutation newTask($input: taskInput!, $token: String!, $userName: String!) {\n    newTask(input: $input, token: $token, userName: $userName) {\n      userName\n      token\n      taskName\n      id\n    }\n  }\n`;\nconst TASK_DONE = gql`\n  mutation updatedTask($id: ID!, $token: String!) {\n    updatedTask(id: $id, token: $token) \n  }\n`;\nconst DELETE_TASK = gql`\n  mutation deletedTask($id: ID!, $token: String!) {\n    deletedTask(id: $id, token: $token) \n  }\n`;\nconst UPDATE_TITLE = gql`\nmutation newupdatedTitleTask($id: ID!, $input: titleInput!, $token: String!) {\n  updatedTitle(id: $id, input: $input, token: $token)\n}\n`;\nfunction App() {\n  _s2();\n  var _tasksData$tasks,\n    _s = $RefreshSig$();\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const currentUserImg = JSON.parse(localStorage.getItem('currentUserImg'));\n  const {\n    data: tasksData\n  } = useQuery(GET_TASKS, {\n    variables: {\n      token: currentUserToken,\n      userName: currentUserName\n    }\n  });\n  const [updateTitleMutation] = useMutation(UPDATE_TITLE);\n  const [addTaskMutation] = useMutation(ADD_TASK);\n  const [deletedTaskMutation] = useMutation(DELETE_TASK);\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE);\n  const tasks = (_tasksData$tasks = tasksData === null || tasksData === void 0 ? void 0 : tasksData.tasks) !== null && _tasksData$tasks !== void 0 ? _tasksData$tasks : [];\n  const navigate = useNavigate();\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    console.log('action from user:' + currentUserToken);\n  }, [tasks]);\n  function AddTask(taskName) {\n    addTaskMutation({\n      variables: {\n        input: {\n          name: taskName\n        },\n        token: currentUserToken,\n        userName: currentUserName\n      },\n      update: (cache, _ref) => {\n        let {\n          data\n        } = _ref;\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const newTask = {\n          userName: currentUserName,\n          token: currentUserToken,\n          taskName: data.newTask.taskName,\n          done: false,\n          id: data.newTask.id\n        };\n        const updatedTasks = [...existingTasks.tasks, newTask];\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    });\n  }\n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id;\n    deletedTaskMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken\n      },\n      update: cache => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.filter(task => task.id !== taskId);\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    });\n  }\n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        done: done\n      },\n      update: cache => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return {\n              ...task,\n              done\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    });\n  }\n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;\n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, _ref2) => {\n        let {\n          data\n        } = _ref2;\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return {\n              ...task,\n              taskName: newName\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    }).catch(error => {\n      if (error.message.includes('version_conflict_engine_exception') && error.message.includes('version conflict')) {} else {\n        console.error(error);\n      }\n    });\n  }\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : numberComplete / numberTotal * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n  function handleLogout() {\n    googleLogout();\n    localStorage.setItem('currentUserImg', JSON.stringify(null));\n    localStorage.setItem('currentUserName', JSON.stringify(null));\n    localStorage.setItem('currentUser', JSON.stringify(null));\n    localStorage.setItem('tasks', JSON.stringify(null));\n    navigate('/login');\n  }\n  function Navbar(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"nav-nav\",\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"user\",\n          children: [\"Ciao \", currentUserName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this);\n  }\n  const [open, setOpen] = useState(false);\n  function Navitem(props) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"iconButton\",\n        onClick: handle,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentUserImg,\n          className: \"UserImg\",\n          alt: \"Immagine del profilo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), props.icon]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), open && props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this);\n  }\n  function handle() {\n    if (!open) {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  }\n  function DropdownMenu() {\n    _s();\n    const [isOpen, setIsOpen] = useState(false);\n    function handleToggle() {\n      setIsOpen(!isOpen);\n    }\n    function DropdownItem(props) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"menu-item\",\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dropdown ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropdown-toggle\",\n        onClick: handleToggle,\n        children: \"Toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-content\",\n        children: /*#__PURE__*/_jsxDEV(DropdownItem, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"out\",\n            onClick: handleLogout,\n            children: \"Disconnettiti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n  }\n  _s(DropdownMenu, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n\n  //{tasksData && tasksData.tasks && tasksData.tasks.map((task, index) => (\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      children: /*#__PURE__*/_jsxDEV(Navitem, {\n        children: /*#__PURE__*/_jsxDEV(DropdownMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [numberComplete, \"/\", numberTotal, \" Complete\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: getMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAdd: AddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), tasks.map((task, index) => /*#__PURE__*/_createElement(Task, {\n      ...task,\n      key: index,\n      onRename: newName => renameTasks(index, newName),\n      onTrash: () => removeTask(index),\n      onToggle: done => updateTaskDone(index, done),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }\n    }))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"vvU23muXTSA9mfjIcab0RmlKL70=\", false, function () {\n  return [useQuery, useMutation, useMutation, useMutation, useMutation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Task","React","TaskForm","useEffect","useState","useQuery","gql","useMutation","googleLogout","useNavigate","jsxDEV","_jsxDEV","createElement","_createElement","GET_TASKS","ADD_TASK","TASK_DONE","DELETE_TASK","UPDATE_TITLE","App","_s2","_tasksData$tasks","_s","$RefreshSig$","currentUserToken","JSON","parse","localStorage","getItem","currentUserName","currentUserImg","data","tasksData","variables","token","userName","updateTitleMutation","addTaskMutation","deletedTaskMutation","updateTaskDoneMutation","tasks","navigate","setItem","stringify","console","log","AddTask","taskName","input","name","update","cache","_ref","existingTasks","readQuery","query","newTask","done","id","updatedTasks","writeQuery","removeTask","index","taskId","filter","task","updateTaskDone","map","i","renameTasks","newName","_ref2","catch","error","message","includes","getMessage","percentage","numberTotal","numberComplete","handleLogout","Navbar","props","children","className","fileName","_jsxFileName","lineNumber","columnNumber","open","setOpen","Navitem","href","onClick","handle","src","alt","icon","DropdownMenu","isOpen","setIsOpen","handleToggle","DropdownItem","t","length","onAdd","key","onRename","onTrash","onToggle","__self","__source","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login/client/src/App.js"],"sourcesContent":["import './App.css';\nimport Task from './Task';\nimport React from 'react';\nimport TaskForm from './TaskForm';\nimport { useEffect,useState } from \"react\";\nimport {useQuery,gql,useMutation} from '@apollo/client'\nimport { googleLogout } from '@react-oauth/google';\nimport { useNavigate } from 'react-router-dom';\n\nconst GET_TASKS = gql`\n  query tasks($token: String!) {\n    tasks(token: $token) {\n      userName\n      token\n      taskName\n      done\n      id\n    }\n  }\n`;\n\nconst ADD_TASK = gql`\n  mutation newTask($input: taskInput!, $token: String!, $userName: String!) {\n    newTask(input: $input, token: $token, userName: $userName) {\n      userName\n      token\n      taskName\n      id\n    }\n  }\n`;\n\nconst TASK_DONE = gql`\n  mutation updatedTask($id: ID!, $token: String!) {\n    updatedTask(id: $id, token: $token) \n  }\n`;\n\nconst DELETE_TASK = gql`\n  mutation deletedTask($id: ID!, $token: String!) {\n    deletedTask(id: $id, token: $token) \n  }\n`;\n\nconst UPDATE_TITLE = gql`\nmutation newupdatedTitleTask($id: ID!, $input: titleInput!, $token: String!) {\n  updatedTitle(id: $id, input: $input, token: $token)\n}\n`;\n\nfunction App() {\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const currentUserImg = JSON.parse(localStorage.getItem('currentUserImg'));\n  const { data: tasksData } = useQuery(GET_TASKS,{    \n    variables: {\n    token: currentUserToken,\n    userName: currentUserName\n  }\n});\n  \n  const [updateTitleMutation] = useMutation(UPDATE_TITLE)\n  const [addTaskMutation] = useMutation(ADD_TASK)\n  const [deletedTaskMutation] = useMutation(DELETE_TASK)\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE)\n  const tasks = tasksData?.tasks ?? [];\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    console.log('action from user:' + currentUserToken);\n  },[tasks]);\n\n  function AddTask(taskName) {\n    addTaskMutation({\n      variables: {\n        input: {\n          name: taskName\n        },\n        token: currentUserToken,\n        userName: currentUserName\n      },\n      update: (cache, { data }) => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const newTask = {\n          userName: currentUserName,\n          token: currentUserToken,\n          taskName: data.newTask.taskName,\n          done: false,\n          id: data.newTask.id\n        };\n        const updatedTasks = [...existingTasks.tasks, newTask];\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: updatedTasks }\n        });\n      },\n    });\n  }\n  \n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id; \n    deletedTaskMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken\n      },\n      update: (cache) => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.filter((task) => task.id !== taskId);\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: updatedTasks }\n        });\n      },\n    });\n  }\n  \n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        done:done\n      },\n      update: (cache) => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return { ...task, done };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: updatedTasks }\n        });\n      }\n    });\n  }\n  \n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;\n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, { data }) => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return { ...task, taskName: newName };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: updatedTasks }\n        });\n      }\n    }).catch(error => {\n      if (\n        error.message.includes('version_conflict_engine_exception') &&\n        error.message.includes('version conflict')\n      ) {\n      } else {\n        console.error(error);\n      }\n    });\n  }  \n\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : (numberComplete / numberTotal) * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n\n  function handleLogout(){\n    googleLogout()\n    localStorage.setItem('currentUserImg', JSON.stringify(null));\n    localStorage.setItem('currentUserName', JSON.stringify(null));\n    localStorage.setItem('currentUser', JSON.stringify(null));\n    localStorage.setItem('tasks', JSON.stringify(null));\n\n    navigate('/login');\n  }\n  \n\n  function Navbar(props) {\n    return (\n      <div>\n        <nav className=\"nav\">\n          <ul className=\"nav-nav\">{props.children}</ul>\n          <p className=\"user\">Ciao {currentUserName}</p>\n        </nav>\n      </div>\n    );\n  }\n  \n  const [open, setOpen] = useState(false);\n  function Navitem(props) {\n    return (\n      <li className=\"nav-item\">\n        <a href=\"#\" className=\"iconButton\" onClick={handle}>\n          <img src={currentUserImg} className=\"UserImg\" alt=\"Immagine del profilo\" />\n          {props.icon}\n        </a>\n        {open && props.children}\n      </li>\n    );\n  }\n\n  function handle(){\n    if(!open){\n      setOpen(true)}else{setOpen(false)}\n  }\n\n\n\n  function DropdownMenu() {\n    const [isOpen, setIsOpen] = useState(false);\n  \n    function handleToggle() {\n      setIsOpen(!isOpen);\n    }\n  \n    function DropdownItem(props) {\n      return (\n        <a href='#' className='menu-item'>\n          {props.children}\n        </a>\n      );\n    }\n  \n    return (\n      <div className={`dropdown ${isOpen ? 'open' : ''}`}>\n        <button className=\"dropdown-toggle\" onClick={handleToggle}>Toggle</button>\n        <div className='dropdown-content'>\n        <DropdownItem><button className=\"out\" onClick={handleLogout}>Disconnettiti</button></DropdownItem>\n        </div>\n      </div>\n    );\n  }\n  \n  \n  \n\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n\n\n//{tasksData && tasksData.tasks && tasksData.tasks.map((task, index) => (\n  return (\n    <main>\n    <Navbar>\n      <Navitem>\n        <DropdownMenu/>\n      </Navitem>\n    </Navbar>\n      <h1>{numberComplete}/{numberTotal} Complete</h1>\n      <h2>{getMessage()}</h2>\n      <TaskForm onAdd={AddTask}/>\n      {tasks.map((task, index) => (\n        <Task\n          {...task}\n          key={index}\n          onRename={newName => renameTasks(index, newName)}\n          onTrash={() => removeTask(index)}\n          onToggle={done => updateTaskDone(index, done)}\n        />\n      ))}\n    </main>\n  )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}