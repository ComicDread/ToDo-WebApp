{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.3/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Task from './Task';\nimport React from 'react';\nimport TaskForm from './TaskForm';\nimport { useEffect } from \"react\";\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { googleLogout } from '@react-oauth/google';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst GET_TASKS = gql`\n  query tasks {\n    tasks {\n      name\n      done\n      id\n    }\n  }\n`;\nconst GET_USERS = gql`\n  query users {\n    users {\n      name\n      token\n      tasks{\n        name\n        done\n        id\n      } \n    }\n  }\n`;\nconst GET_USER = gql`\n  query user($token: String!) {\n    user(token: $token) {\n      name\n      token\n      tasks {\n        name\n        done\n        id\n      } \n    }\n  }\n`;\nconst ADD_TASK = gql`\n  mutation newTask($input: taskInput!, $token: String!) {\n    newTask(input: $input, token: $token) {\n      name\n      id\n    }\n  }\n`;\nconst TASK_DONE = gql`\n  mutation updatedTask($id: ID!, $token: String!) {\n    updatedTask(id: $id, token: $token) \n  }\n`;\nconst DELETE_TASK = gql`\n  mutation deletedTask($id: ID!, $token: String!) {\n    deletedTask(id: $id, token: $token) \n  }\n`;\nconst UPDATE_TITLE = gql`\nmutation newupdatedTitleTask($id: ID!, $input: titleInput!, $token: String!) {\n  updatedTitle(id: $id, input: $input, token: $token)\n}\n`;\nfunction App() {\n  _s();\n  var _userData$user$tasks, _userData$user, _userData$user2;\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const currentUserImg = JSON.parse(localStorage.getItem('currentUserImg'));\n  const {\n    data: tasksData\n  } = useQuery(GET_TASKS);\n  const {\n    data: usersData\n  } = useQuery(GET_USERS);\n  const {\n    data: userData\n  } = useQuery(GET_USER, {\n    variables: {\n      token: currentUserToken\n    }\n  });\n  const [updateTitleMutation] = useMutation(UPDATE_TITLE);\n  const [addTaskMutation] = useMutation(ADD_TASK);\n  const [deletedTaskMutation] = useMutation(DELETE_TASK);\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE);\n  const tasks = (_userData$user$tasks = userData === null || userData === void 0 ? void 0 : (_userData$user = userData.user) === null || _userData$user === void 0 ? void 0 : _userData$user.tasks) !== null && _userData$user$tasks !== void 0 ? _userData$user$tasks : [];\n  const user = (_userData$user2 = userData === null || userData === void 0 ? void 0 : userData.user) !== null && _userData$user2 !== void 0 ? _userData$user2 : [];\n  const users = usersData !== null && usersData !== void 0 ? usersData : [];\n  const navigate = useNavigate();\n  useEffect(() => {\n    localStorage.setItem('user', JSON.stringify(user));\n    localStorage.setItem('users', JSON.stringify(users));\n    console.log('action from user:' + currentUserToken);\n  }, [user]);\n  function AddTask(name) {\n    addTaskMutation({\n      variables: {\n        input: {\n          name: name\n        },\n        token: currentUserToken\n      },\n      update: (cache, _ref) => {\n        let {\n          data\n        } = _ref;\n        // GET_TASKS\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const newTask = {\n          name: data.newTask.name,\n          done: false,\n          id: data.newTask.id\n        };\n        const updatedTasks = [...existingTasks.tasks, newTask];\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n\n        // GET_USERS\n        const {\n          users\n        } = cache.readQuery({\n          query: GET_USERS\n        });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [...users.filter(user => user.token !== currentUserToken), {\n              ...currentUser,\n              tasks: [...currentUser.tasks, newTask]\n            }]\n          }\n        });\n\n        // GET_USER\n        cache.writeQuery({\n          query: GET_USER,\n          variables: {\n            token: currentUserToken\n          },\n          data: {\n            user: {\n              ...currentUser,\n              tasks: [...currentUser.tasks, newTask]\n            }\n          }\n        });\n      }\n    });\n  }\n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id;\n    deletedTaskMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken\n      },\n      update: cache => {\n        // GET_TASKS\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const updatedTasks = existingTasks.tasks.filter((task, i) => i !== index);\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n\n        // GET_USERS\n        const {\n          users\n        } = cache.readQuery({\n          query: GET_USERS\n        });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [...users.filter(user => user.token !== currentUserToken), {\n              ...currentUser,\n              tasks: updatedTasks\n            }]\n          }\n        });\n\n        // GET_USER\n        cache.writeQuery({\n          query: GET_USER,\n          variables: {\n            token: currentUserToken\n          },\n          data: {\n            user: {\n              ...currentUser,\n              tasks: updatedTasks\n            }\n          }\n        });\n      }\n    });\n  }\n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        done: done\n      },\n      update: cache => {\n        // GET_TASKS\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return {\n              ...task,\n              done\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n\n        // GET_USERS\n        const {\n          users\n        } = cache.readQuery({\n          query: GET_USERS\n        });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [...users.filter(user => user.token !== currentUserToken), {\n              ...currentUser,\n              tasks: updatedTasks\n            }]\n          }\n        });\n\n        // GET_USER\n        cache.writeQuery({\n          query: GET_USER,\n          variables: {\n            token: currentUserToken\n          },\n          data: {\n            user: {\n              ...currentUser,\n              tasks: updatedTasks\n            }\n          }\n        });\n      }\n    });\n  }\n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;\n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, _ref2) => {\n        let {\n          data\n        } = _ref2;\n        //GET_TASKS\n\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return {\n              ...task,\n              name: newName\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n\n        // GET_USERS\n        const {\n          users\n        } = cache.readQuery({\n          query: GET_USERS\n        });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [...users.filter(user => user.token !== currentUserToken), {\n              ...currentUser,\n              tasks: updatedTasks\n            }]\n          }\n        });\n\n        // GET_USER\n        cache.writeQuery({\n          query: GET_USER,\n          variables: {\n            token: currentUserToken\n          },\n          data: {\n            user: {\n              ...currentUser,\n              tasks: updatedTasks\n            }\n          }\n        });\n      }\n    }).catch(error => {\n      if (error.message.includes('version_conflict_engine_exception') && error.message.includes('version conflict')) {} else {\n        console.error(error);\n      }\n    });\n  }\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : numberComplete / numberTotal * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n  function handleLogout() {\n    googleLogout();\n    localStorage.setItem('currentUserImg', JSON.stringify(null));\n    localStorage.setItem('currentUserName', JSON.stringify(null));\n    localStorage.setItem('currentUser', JSON.stringify(null));\n    navigate('/login');\n  }\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n\n  //{tasksData && tasksData.tasks && tasksData.tasks.map((task, index) => (\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: currentUserImg,\n      className: \"UserImg\",\n      alt: \"Immagine del profilo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"user\",\n      children: [\"Ciao \", currentUserName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"out\",\n        onClick: handleLogout,\n        children: \"Disconnettiti\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [numberComplete, \"/\", numberTotal, \" Complete\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: getMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAdd: AddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), tasks.map((task, index) => /*#__PURE__*/_createElement(Task, {\n      ...task,\n      key: index,\n      onRename: newName => renameTasks(index, newName),\n      onTrash: () => removeTask(index),\n      onToggle: done => updateTaskDone(index, done),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }\n    }))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+7Q8Q+3ew0zTvbpDVrEqnNmuwUk=\", false, function () {\n  return [useQuery, useQuery, useQuery, useMutation, useMutation, useMutation, useMutation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Task","React","TaskForm","useEffect","useQuery","gql","useMutation","googleLogout","useNavigate","jsxDEV","_jsxDEV","createElement","_createElement","GET_TASKS","GET_USERS","GET_USER","ADD_TASK","TASK_DONE","DELETE_TASK","UPDATE_TITLE","App","_s","_userData$user$tasks","_userData$user","_userData$user2","currentUserToken","JSON","parse","localStorage","getItem","currentUserName","currentUserImg","data","tasksData","usersData","userData","variables","token","updateTitleMutation","addTaskMutation","deletedTaskMutation","updateTaskDoneMutation","tasks","user","users","navigate","setItem","stringify","console","log","AddTask","name","input","update","cache","_ref","existingTasks","readQuery","query","newTask","done","id","updatedTasks","writeQuery","currentUser","find","filter","removeTask","index","taskId","task","i","updateTaskDone","map","renameTasks","newName","_ref2","catch","error","message","includes","getMessage","percentage","numberTotal","numberComplete","handleLogout","t","length","children","src","className","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAdd","key","onRename","onTrash","onToggle","__self","__source","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.3/client/src/App.js"],"sourcesContent":["import './App.css';\nimport Task from './Task';\nimport React from 'react';\nimport TaskForm from './TaskForm';\nimport { useEffect } from \"react\";\nimport {useQuery,gql,useMutation} from '@apollo/client'\nimport { googleLogout } from '@react-oauth/google';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst GET_TASKS = gql`\n  query tasks {\n    tasks {\n      name\n      done\n      id\n    }\n  }\n`;\n\nconst GET_USERS = gql`\n  query users {\n    users {\n      name\n      token\n      tasks{\n        name\n        done\n        id\n      } \n    }\n  }\n`;\n\nconst GET_USER = gql`\n  query user($token: String!) {\n    user(token: $token) {\n      name\n      token\n      tasks {\n        name\n        done\n        id\n      } \n    }\n  }\n`;\n\nconst ADD_TASK = gql`\n  mutation newTask($input: taskInput!, $token: String!) {\n    newTask(input: $input, token: $token) {\n      name\n      id\n    }\n  }\n`;\n\nconst TASK_DONE = gql`\n  mutation updatedTask($id: ID!, $token: String!) {\n    updatedTask(id: $id, token: $token) \n  }\n`;\n\nconst DELETE_TASK = gql`\n  mutation deletedTask($id: ID!, $token: String!) {\n    deletedTask(id: $id, token: $token) \n  }\n`;\n\nconst UPDATE_TITLE = gql`\nmutation newupdatedTitleTask($id: ID!, $input: titleInput!, $token: String!) {\n  updatedTitle(id: $id, input: $input, token: $token)\n}\n`;\n\n\nfunction App() {\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const currentUserImg = JSON.parse(localStorage.getItem('currentUserImg'));\n  const { data: tasksData } = useQuery(GET_TASKS)\n  const { data: usersData } = useQuery(GET_USERS)\n  const { data: userData } = useQuery(GET_USER, {\n    variables: {\n      token: currentUserToken\n    }\n  });\n  \n  const [updateTitleMutation] = useMutation(UPDATE_TITLE)\n  const [addTaskMutation] = useMutation(ADD_TASK)\n  const [deletedTaskMutation] = useMutation(DELETE_TASK)\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE)\n  const tasks = userData?.user?.tasks ?? [];\n  const user = userData?.user ?? []; \n  const users = usersData ?? [] \n\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    localStorage.setItem('user', JSON.stringify(user));\n    localStorage.setItem('users', JSON.stringify(users));\n    console.log('action from user:' + currentUserToken);\n  }, [user]);\n\n  function AddTask(name) {\n    addTaskMutation({\n      variables: {\n        input: {\n          name: name\n        },\n        token: currentUserToken\n      },\n      update: (cache, { data }) => {\n\n        // GET_TASKS\n        const existingTasks = cache.readQuery({ query: GET_TASKS });\n        const newTask = {\n          name: data.newTask.name,\n          done: false,\n          id: data.newTask.id,\n        };\n        const updatedTasks = [...existingTasks.tasks, newTask];\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n  \n        // GET_USERS\n        const { users } = cache.readQuery({ query: GET_USERS });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [\n              ...users.filter(user => user.token !== currentUserToken),\n              {\n                ...currentUser,\n                tasks: [...currentUser.tasks, newTask]\n              }\n            ]\n          }\n        });\n  \n        // GET_USER\n        cache.writeQuery({\n          query: GET_USER,\n          variables: {\n            token: currentUserToken\n          },\n          data: {\n            user: {\n              ...currentUser,\n              tasks: [...currentUser.tasks, newTask]\n            }\n          }\n        });\n      },\n    });\n  }\n  \n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id;\n    deletedTaskMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken\n      },\n      update: (cache) => {\n        // GET_TASKS\n        const existingTasks = cache.readQuery({ query: GET_TASKS });\n        const updatedTasks = existingTasks.tasks.filter((task, i) => i !== index);\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n  \n        // GET_USERS\n        const { users } = cache.readQuery({ query: GET_USERS });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [\n              ...users.filter(user => user.token !== currentUserToken),\n              {\n                ...currentUser,\n                tasks: updatedTasks\n              }\n            ]\n          }\n        });\n  \n        // GET_USER\n        cache.writeQuery({\n          query: GET_USER,\n          variables: {\n            token: currentUserToken\n          },\n          data: {\n            user: {\n              ...currentUser,\n              tasks: updatedTasks\n            }\n          }\n        });\n      }\n    });\n  }\n  \n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        done:done\n      },\n      update: (cache) => {\n        // GET_TASKS\n        const existingTasks = cache.readQuery({ query: GET_TASKS });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return { ...task, done };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n  \n        // GET_USERS\n        const { users } = cache.readQuery({ query: GET_USERS });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [\n              ...users.filter(user => user.token !== currentUserToken),\n              {\n                ...currentUser,\n                tasks: updatedTasks\n              }\n            ]\n          }\n        });\n  \n        // GET_USER\n        cache.writeQuery({\n          query: GET_USER,\n          variables: {\n            token: currentUserToken\n          },\n          data: {\n            user: {\n              ...currentUser,\n              tasks: updatedTasks\n            }\n          }\n        });\n      }\n    });\n  }\n  \n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;\n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, { data }) => {\n        //GET_TASKS\n\n        const existingTasks = cache.readQuery({ query: GET_TASKS });\n        const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return { ...task, name: newName };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n\n        // GET_USERS\n        const { users } = cache.readQuery({ query: GET_USERS });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [\n              ...users.filter(user => user.token !== currentUserToken),\n              {\n                ...currentUser,\n                tasks: updatedTasks\n              }\n            ]\n          }\n        });\n  \n        // GET_USER\n        cache.writeQuery({\n          query: GET_USER,\n          variables: {\n            token: currentUserToken\n          },\n          data: {\n            user: {\n              ...currentUser,\n              tasks: updatedTasks\n            }\n          }\n        });\n      }\n    }).catch(error => {\n      if (\n        error.message.includes('version_conflict_engine_exception') &&\n        error.message.includes('version conflict')\n      ) {\n      } else {\n        console.error(error);\n      }\n    });\n  }\n\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : (numberComplete / numberTotal) * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n\n  function handleLogout(){\n    googleLogout()\n    localStorage.setItem('currentUserImg', JSON.stringify(null));\n    localStorage.setItem('currentUserName', JSON.stringify(null));\n    localStorage.setItem('currentUser', JSON.stringify(null));\n    navigate('/login');\n  }\n  \n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n\n//{tasksData && tasksData.tasks && tasksData.tasks.map((task, index) => (\n  return (\n    <main>\n      <img src={currentUserImg} className=\"UserImg\" alt=\"Immagine del profilo\" />\n      <h5 className=\"user\">Ciao {currentUserName}</h5>\n      <div className=\"container\">\n      <button className=\"out\" onClick={handleLogout}>Disconnettiti</button>\n    </div>\n      <h1>{numberComplete}/{numberTotal} Complete</h1>\n      <h2>{getMessage()}</h2>\n      <TaskForm onAdd={AddTask}/>\n      {tasks.map((task, index) => (\n        <Task\n          {...task}\n          key={index}\n          onRename={newName => renameTasks(index, newName)}\n          onTrash={() => removeTask(index)}\n          onToggle={done => updateTaskDone(index, done)}\n        />\n      ))}\n\n    </main>\n  )\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}