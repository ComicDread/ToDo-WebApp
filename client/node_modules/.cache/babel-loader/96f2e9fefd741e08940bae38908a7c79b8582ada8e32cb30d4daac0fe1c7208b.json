{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.1/client/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport client from '../index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHECK_USER = gql`\n  query CheckUser($token: String!) {\n    user(token: $token) {\n      _id\n      userName\n    }\n  }\n`;\nconst CREATE_USER = gql`\n  mutation CreateUser($token: String!, $userName: String!) {\n    createUser(token: $token, userName: $userName) {\n      _id\n      userName\n    }\n  }\n`;\nexport default function Login() {\n  _s();\n  const navigate = useNavigate();\n  const [addUserMutation] = useMutation(CREATE_USER);\n  const [currentUserToken, setCurrentUserToken] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState(null);\n  const [currentUserImg, setCurrentUserImg] = useState(null);\n  useEffect(() => {\n    console.log('user:' + currentUserToken);\n  });\n  const handleSuccess = async credentialResponse => {\n    const {\n      data\n    } = await client.query({\n      query: CHECK_USER,\n      variables: {\n        token\n      }\n    });\n    if (!data.user) {\n      await client.mutate({\n        mutation: CREATE_USER,\n        variables: {\n          token,\n          userName: decoded.given_name\n        }\n      });\n    }\n    var decoded = jwt_decode(credentialResponse.credential);\n    localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n    localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n    localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n    navigate('/');\n  };\n  const handleError = () => {\n    console.log('Login Failed');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"signInButton\",\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n      clientId: \"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleSuccess,\n        onError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"fS/cnC/MHxZunphZhvH7dlRvRAY=\", true, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["GoogleLogin","GoogleOAuthProvider","jwt_decode","useState","useEffect","useNavigate","client","jsxDEV","_jsxDEV","CHECK_USER","gql","CREATE_USER","Login","_s","navigate","addUserMutation","useMutation","currentUserToken","setCurrentUserToken","currentUserName","setCurrentUserName","currentUserImg","setCurrentUserImg","console","log","handleSuccess","credentialResponse","data","query","variables","token","user","mutate","mutation","userName","decoded","given_name","credential","localStorage","setItem","JSON","stringify","sub","picture","handleError","id","style","display","justifyContent","alignItems","children","clientId","onSuccess","onError","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.1/client/src/components/Login.js"],"sourcesContent":["import { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport client from '../index'\n\nconst CHECK_USER = gql`\n  query CheckUser($token: String!) {\n    user(token: $token) {\n      _id\n      userName\n    }\n  }\n`;\nconst CREATE_USER = gql`\n  mutation CreateUser($token: String!, $userName: String!) {\n    createUser(token: $token, userName: $userName) {\n      _id\n      userName\n    }\n  }\n`;\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const [addUserMutation] = useMutation(CREATE_USER)\n  const [currentUserToken, setCurrentUserToken] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState(null);\n  const [currentUserImg, setCurrentUserImg] = useState(null);\n\n  useEffect(() => {\n    console.log('user:' + currentUserToken);\n  },);\n\n  const handleSuccess = async (credentialResponse) => {\n    const { data } = await client.query({\n      query: CHECK_USER,\n      variables: { token },\n    });\n    if (!data.user) {\n      await client.mutate({\n        mutation: CREATE_USER,\n        variables: { token, userName: decoded.given_name },\n      });\n    }\n  \n    var decoded = jwt_decode(credentialResponse.credential);\n    localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n    localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n    localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));  \n    navigate('/');\n  };\n   \n  const handleError = () => {\n    console.log('Login Failed');\n  };\n\n  return (\n    <div id=\"signInButton\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n      <GoogleOAuthProvider clientId=\"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\">\n        <GoogleLogin onSuccess={handleSuccess} onError={handleError} />\n      </GoogleOAuthProvider>\n    </div>\n  );\n  \n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}