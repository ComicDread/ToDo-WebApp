{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.1 copia/client/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport { gql, useMutation } from '@apollo/client';\nimport client from '../index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHECK_USER = gql`\n  query CheckUser($token: String!) {\n    CheckUser(token: $token) {\n      _id\n      userName\n    }\n  }\n`;\nexport default function Login() {\n  _s();\n  const navigate = useNavigate();\n  const [currentUserToken, setCurrentUserToken] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState(null);\n  const [currentUserImg, setCurrentUserImg] = useState(null);\n  const [isUserRegistered, setIsUserRegistered] = useState(null);\n  useEffect(() => {\n    console.log('user:' + currentUserToken);\n  });\n  const handleSuccess = async credentialResponse => {\n    var decoded = jwt_decode(credentialResponse.credential);\n    const token = decoded.sub;\n    const {\n      data\n    } = await client.query({\n      query: CHECK_USER,\n      variables: {\n        token: token\n      }\n    });\n    console.log(data);\n    if (!data.CheckUser) {\n      setIsUserRegistered(false);\n    } else localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n    localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n    localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n    setIsUserRegistered(true);\n    navigate('/');\n  };\n  const handleError = () => {\n    console.log('Login Failed');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"signInButton\",\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [!isUserRegistered && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"User not registered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n      clientId: \"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleSuccess,\n        onError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"JQxatIZehJYNYKTsBmumahCUHY4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["GoogleLogin","GoogleOAuthProvider","jwt_decode","useState","useEffect","useNavigate","gql","useMutation","client","jsxDEV","_jsxDEV","CHECK_USER","Login","_s","navigate","currentUserToken","setCurrentUserToken","currentUserName","setCurrentUserName","currentUserImg","setCurrentUserImg","isUserRegistered","setIsUserRegistered","console","log","handleSuccess","credentialResponse","decoded","credential","token","sub","data","query","variables","CheckUser","localStorage","setItem","JSON","stringify","given_name","picture","handleError","id","style","display","justifyContent","alignItems","children","color","fileName","_jsxFileName","lineNumber","columnNumber","clientId","onSuccess","onError","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.1 copia/client/src/components/Login.js"],"sourcesContent":["import { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport  {gql,useMutation} from '@apollo/client'\nimport client from '../index'\n\nconst CHECK_USER = gql`\n  query CheckUser($token: String!) {\n    CheckUser(token: $token) {\n      _id\n      userName\n    }\n  }\n`;\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const [currentUserToken, setCurrentUserToken] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState(null);\n  const [currentUserImg, setCurrentUserImg] = useState(null);\n  const [isUserRegistered, setIsUserRegistered] = useState(null);\n\n  useEffect(() => {\n    console.log('user:' + currentUserToken);\n  },);\n\n  const handleSuccess = async (credentialResponse) => {\n    var decoded = jwt_decode(credentialResponse.credential);\n    const token = decoded.sub;\n    const { data } = await client.query({\n      query: CHECK_USER,\n      variables: { token: token }\n    });\n    console.log(data);\n    if (!data.CheckUser) {\n      setIsUserRegistered(false);\n    }else\n    localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n    localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n    localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));  \n    setIsUserRegistered(true);\n    navigate('/');\n  };\n   \n  const handleError = () => {\n    console.log('Login Failed');\n  };\n\n  return (\n    <div id=\"signInButton\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n      {!isUserRegistered && <p style={{ color: 'red' }}>User not registered</p>}\n      <GoogleOAuthProvider clientId=\"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\">\n        <GoogleLogin onSuccess={handleSuccess} onError={handleError} />\n      </GoogleOAuthProvider>\n    </div>\n  );\n  \n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}