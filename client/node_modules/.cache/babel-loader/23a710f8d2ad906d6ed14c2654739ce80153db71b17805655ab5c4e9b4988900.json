{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.3/client/src/index.js\";\nimport App from './App';\nimport './index.css';\nimport { InMemoryCache, ApolloProvider, ApolloClient } from '@apollo/client';\nimport { createRoot } from 'react-dom/client';\nimport { createBrowserRouter, RouterProvider, Route } from \"react-router-dom\";\nimport Login from './pages/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:5555/graphql',\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          tasks: {\n            keyArgs: false\n          }\n        }\n      }\n    }\n  })\n});\nconst root = createRoot(document.getElementById('root'));\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 17\n  }, this)\n}, {\n  path: 'Login',\n  element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 16\n  }, this)\n}]);\nroot.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 1\n}, this));\nexport default client;","map":{"version":3,"names":["App","InMemoryCache","ApolloProvider","ApolloClient","createRoot","createBrowserRouter","RouterProvider","Route","Login","jsxDEV","_jsxDEV","client","uri","cache","typePolicies","Query","fields","tasks","keyArgs","root","document","getElementById","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","render","children"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.3/client/src/index.js"],"sourcesContent":["import App from './App'\nimport './index.css'\nimport {InMemoryCache, ApolloProvider, ApolloClient} from '@apollo/client';\nimport { createRoot } from 'react-dom/client';\nimport {createBrowserRouter,RouterProvider,Route} from \"react-router-dom\"\nimport Login from './pages/Login'\nconst client = new ApolloClient({\n  uri: 'http://localhost:5555/graphql',\n  cache :new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          tasks: {\n            keyArgs: false,\n          },\n        },\n      },\n    },\n  })\n  \n});\n\nconst root = createRoot(document.getElementById('root'));\n\nconst router = createBrowserRouter([\n    {\n        path:'/',\n        element:<App/>\n    },    \n    {\n      path:'Login',\n      element: <Login/>\n    } \n])\n\nroot.render(\n<ApolloProvider client={client}>\n  <RouterProvider router={router}/>\n</ApolloProvider>\n);\n\nexport default client\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,OAAO;AACvB,OAAO,aAAa;AACpB,SAAQC,aAAa,EAAEC,cAAc,EAAEC,YAAY,QAAO,gBAAgB;AAC1E,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAAQC,mBAAmB,EAACC,cAAc,EAACC,KAAK,QAAO,kBAAkB;AACzE,OAAOC,KAAK,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,MAAM,GAAG,IAAIR,YAAY,CAAC;EAC9BS,GAAG,EAAE,+BAA+B;EACpCC,KAAK,EAAE,IAAIZ,aAAa,CAAC;IACvBa,YAAY,EAAE;MACZC,KAAK,EAAE;QACLC,MAAM,EAAE;UACNC,KAAK,EAAE;YACLC,OAAO,EAAE;UACX;QACF;MACF;IACF;EACF,CAAC;AAEH,CAAC,CAAC;AAEF,MAAMC,IAAI,GAAGf,UAAU,CAACgB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAExD,MAAMC,MAAM,GAAGjB,mBAAmB,CAAC,CAC/B;EACIkB,IAAI,EAAC,GAAG;EACRC,OAAO,eAACd,OAAA,CAACV,GAAG;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AACjB,CAAC,EACD;EACEL,IAAI,EAAC,OAAO;EACZC,OAAO,eAAEd,OAAA,CAACF,KAAK;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAClB,CAAC,CACJ,CAAC;AAEFT,IAAI,CAACU,MAAM,eACXnB,OAAA,CAACR,cAAc;EAACS,MAAM,EAAEA,MAAO;EAAAmB,QAAA,eAC7BpB,OAAA,CAACJ,cAAc;IAACgB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACnB,CAChB,CAAC;AAED,eAAejB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}