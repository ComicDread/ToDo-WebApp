{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { GET_TASKS, DELETE_TASKS } from \"../../queries/query\";\nfunction RemoveAllTasks() {\n  _s();\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const [deleteAllTasksMutation] = useMutation(DELETE_TASKS);\n  const {\n    data: tasksData\n  } = useQuery(GET_TASKS, {\n    variables: {\n      token: currentUserToken,\n      userName: currentUserName\n    }\n  });\n  const taskIds = tasksData.tasks.map(task => task.id);\n  const handleRemoveAllTasks = async () => {\n    await deleteAllTasksMutation({\n      variables: {\n        token: currentUserToken,\n        id: taskIds\n      },\n      update: cache => {\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: {\n            tasks: []\n          }\n        });\n      }\n    });\n  };\n  return null; // or return some JSX if needed\n}\n_s(RemoveAllTasks, \"rM4vi/15Qjebt+cUKkEJB6YosAM=\", false, function () {\n  return [useMutation, useQuery];\n});\n_c = RemoveAllTasks;\nexport default RemoveAllTasks;\nvar _c;\n$RefreshReg$(_c, \"RemoveAllTasks\");","map":{"version":3,"names":["React","useMutation","useQuery","GET_TASKS","DELETE_TASKS","RemoveAllTasks","_s","currentUserToken","JSON","parse","localStorage","getItem","currentUserName","deleteAllTasksMutation","data","tasksData","variables","token","userName","taskIds","tasks","map","task","id","handleRemoveAllTasks","update","cache","writeQuery","query","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo/client/src/components/functions/RemoveAllTasks.js"],"sourcesContent":["import React from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { GET_TASKS, DELETE_TASKS } from \"../../queries/query\";\n\nfunction RemoveAllTasks() {\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n\n  const [deleteAllTasksMutation] = useMutation(DELETE_TASKS);\n  const { data: tasksData } = useQuery(GET_TASKS, {\n    variables: {\n      token: currentUserToken,\n      userName: currentUserName\n    }\n  });\n\n  const taskIds = tasksData.tasks.map((task) => task.id);\n\n  const handleRemoveAllTasks = async () => {\n    await deleteAllTasksMutation({\n      variables: {\n        token: currentUserToken,\n        id: taskIds\n      },\n      update: (cache) => {\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: [] },\n        });\n      },\n    });\n  }\n\n  return null; // or return some JSX if needed\n}\n\nexport default RemoveAllTasks;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,gBAAgB;AACtD,SAASC,SAAS,EAAEC,YAAY,QAAQ,qBAAqB;AAE7D,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;EACxE,MAAMC,eAAe,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;EAE3E,MAAM,CAACE,sBAAsB,CAAC,GAAGZ,WAAW,CAACG,YAAY,CAAC;EAC1D,MAAM;IAAEU,IAAI,EAAEC;EAAU,CAAC,GAAGb,QAAQ,CAACC,SAAS,EAAE;IAC9Ca,SAAS,EAAE;MACTC,KAAK,EAAEV,gBAAgB;MACvBW,QAAQ,EAAEN;IACZ;EACF,CAAC,CAAC;EAEF,MAAMO,OAAO,GAAGJ,SAAS,CAACK,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAAC;EAEtD,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,MAAMX,sBAAsB,CAAC;MAC3BG,SAAS,EAAE;QACTC,KAAK,EAAEV,gBAAgB;QACvBgB,EAAE,EAAEJ;MACN,CAAC;MACDM,MAAM,EAAGC,KAAK,IAAK;QACjBA,KAAK,CAACC,UAAU,CAAC;UACfC,KAAK,EAAEzB,SAAS;UAChBa,SAAS,EAAE;YACTC,KAAK,EAAEV,gBAAgB;YACvBW,QAAQ,EAAEN;UACZ,CAAC;UACDE,IAAI,EAAE;YAAEM,KAAK,EAAE;UAAG;QACpB,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC;EAED,OAAO,IAAI,CAAC,CAAC;AACf;AAACd,EAAA,CAlCQD,cAAc;EAAA,QAIYJ,WAAW,EAChBC,QAAQ;AAAA;AAAA2B,EAAA,GAL7BxB,cAAc;AAoCvB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}