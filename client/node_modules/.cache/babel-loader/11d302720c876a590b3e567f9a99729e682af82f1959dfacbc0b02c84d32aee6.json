{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Task from './components/Task';\nimport React from 'react';\nimport TaskForm from './components/TaskForm';\nimport { useEffect, useState } from \"react\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_TASKS, ADD_TASK, TASK_DONE, DELETE_TASK, UPDATE_TITLE, DELETE_TASKS, TASK_SORTED, TASK_SORTED_DESC, TASK_SORTED_DONE, TASK_SORTED_NOT_DONE, DELETE_USER, CHECK_USER } from './queries/query';\nimport DropdownMenu from './components/navbar/dropdown';\nimport Navbar from './components/navbar/nav';\nimport Navitem from './components/navbar/item';\nimport AddTask from './components/functions/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nfunction App() {\n  _s();\n  var _tasksData$tasks;\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const currentUserImg = JSON.parse(localStorage.getItem('currentUserImg'));\n  const {\n    data: tasksData\n  } = useQuery(GET_TASKS, {\n    variables: {\n      token: currentUserToken,\n      userName: currentUserName\n    }\n  });\n  const [getTasksDESC] = useMutation(TASK_SORTED_DESC);\n  const [sortedTasks, setSortedTasks] = useState([]);\n  const [deleteAllTasksMutation] = useMutation(DELETE_TASKS);\n  const [deleteUserMutation] = useMutation(DELETE_USER);\n  const [updateTitleMutation] = useMutation(UPDATE_TITLE);\n  const [deletedTaskMutation] = useMutation(DELETE_TASK);\n  const [getTasksDone] = useMutation(TASK_SORTED_DONE);\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE);\n  const [getTasksNotDone] = useMutation(TASK_SORTED_NOT_DONE);\n  const [open, setOpen] = useState(false);\n  const tasks = (_tasksData$tasks = tasksData === null || tasksData === void 0 ? void 0 : tasksData.tasks) !== null && _tasksData$tasks !== void 0 ? _tasksData$tasks : [];\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n  const [getTasks] = useMutation(TASK_SORTED);\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    console.log('action from user:' + currentUserToken);\n  }, [tasks]);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (event.target.closest('.dropdown') === null) {\n        setOpen(false);\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id;\n    deletedTaskMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken\n      },\n      update: cache => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.filter(task => task.id !== taskId);\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    });\n  }\n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        done: done\n      },\n      update: cache => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return {\n              ...task,\n              done\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    });\n  }\n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;\n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, _ref) => {\n        let {\n          data\n        } = _ref;\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return {\n              ...task,\n              taskName: newName\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    }).catch(error => {\n      if (error.message.includes('version_conflict_engine_exception') && error.message.includes('version conflict')) {} else {\n        console.error(error);\n      }\n    });\n  }\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : numberComplete / numberTotal * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n\n  //{tasksData && tasksData.tasks && tasksData.tasks.map((task, index) => (\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      children: /*#__PURE__*/_jsxDEV(Navitem, {\n        children: /*#__PURE__*/_jsxDEV(DropdownMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [numberComplete, \"/\", numberTotal, \" Complete\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: getMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAdd: AddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskContainer\",\n      children: tasks.map((task, index) => /*#__PURE__*/_createElement(Task, {\n        ...task,\n        key: index,\n        onRename: newName => renameTasks(index, newName),\n        onTrash: () => removeTask(index),\n        onToggle: done => updateTaskDone(index, done),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LIuCTIvFMybHfdQKM497JnYmEEM=\", false, function () {\n  return [useQuery, useMutation, useMutation, useMutation, useMutation, useMutation, useMutation, useMutation, useMutation, useMutation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Task","React","TaskForm","useEffect","useState","useQuery","useMutation","GET_TASKS","ADD_TASK","TASK_DONE","DELETE_TASK","UPDATE_TITLE","DELETE_TASKS","TASK_SORTED","TASK_SORTED_DESC","TASK_SORTED_DONE","TASK_SORTED_NOT_DONE","DELETE_USER","CHECK_USER","DropdownMenu","Navbar","Navitem","AddTask","jsxDEV","_jsxDEV","createElement","_createElement","App","_s","_tasksData$tasks","currentUserToken","JSON","parse","localStorage","getItem","currentUserName","currentUserImg","data","tasksData","variables","token","userName","getTasksDESC","sortedTasks","setSortedTasks","deleteAllTasksMutation","deleteUserMutation","updateTitleMutation","deletedTaskMutation","getTasksDone","updateTaskDoneMutation","getTasksNotDone","open","setOpen","tasks","numberComplete","filter","t","done","length","numberTotal","getTasks","setItem","stringify","console","log","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","removeTask","index","taskId","id","update","cache","existingTasks","readQuery","query","updatedTasks","task","writeQuery","updateTaskDone","map","i","renameTasks","newName","input","name","_ref","taskName","catch","error","message","includes","getMessage","percentage","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","className","key","onRename","onTrash","onToggle","__self","__source","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo/client/src/App.js"],"sourcesContent":["import  './App.css';\nimport  Task from './components/Task';\nimport  React from 'react';\nimport  TaskForm from './components/TaskForm';\nimport  { useEffect,useState } from \"react\";\nimport  {useQuery,useMutation} from '@apollo/client'\nimport  {GET_TASKS,ADD_TASK,TASK_DONE,DELETE_TASK,UPDATE_TITLE,DELETE_TASKS,TASK_SORTED,TASK_SORTED_DESC,TASK_SORTED_DONE,TASK_SORTED_NOT_DONE,DELETE_USER,CHECK_USER} from './queries/query';\nimport DropdownMenu from './components/navbar/dropdown'\nimport Navbar from './components/navbar/nav'\nimport Navitem from './components/navbar/item'\nimport AddTask from './components/functions/AddTask'\nfunction App() {\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const currentUserImg = JSON.parse(localStorage.getItem('currentUserImg'));\n  const { data: tasksData } = useQuery(GET_TASKS,{    \n    variables: {\n    token: currentUserToken,\n    userName: currentUserName\n  }\n});\n\n  const [getTasksDESC] = useMutation(TASK_SORTED_DESC)\n  const [sortedTasks, setSortedTasks] = useState([]);\n  const [deleteAllTasksMutation] = useMutation(DELETE_TASKS)\n  const [deleteUserMutation] = useMutation(DELETE_USER)\n  const [updateTitleMutation] = useMutation(UPDATE_TITLE)\n  const [deletedTaskMutation] = useMutation(DELETE_TASK)\n  const [getTasksDone] = useMutation(TASK_SORTED_DONE)\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE)\n  const [getTasksNotDone] = useMutation(TASK_SORTED_NOT_DONE)\n  const [open, setOpen] = useState(false);\n  const tasks = tasksData?.tasks ?? [];\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n  const [getTasks] = useMutation(TASK_SORTED)\n  \n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    console.log('action from user:' + currentUserToken);\n  },[tasks]);\n\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (event.target.closest('.dropdown') === null) {\n        setOpen(false);\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  \n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id; \n    deletedTaskMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken\n      },\n      update: (cache) => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.filter((task) => task.id !== taskId);\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: updatedTasks }\n        });\n      },\n    });\n  }\n  \n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        done:done\n      },\n      update: (cache) => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return { ...task, done };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: updatedTasks }\n        });\n      }\n    });\n  }\n  \n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;\n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, { data }) => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return { ...task, taskName: newName };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: updatedTasks }\n        });\n      }\n    }).catch(error => {\n      if (\n        error.message.includes('version_conflict_engine_exception') &&\n        error.message.includes('version conflict')\n      ) {\n      } else {\n        console.error(error);\n      }\n    });\n  }  \n\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : (numberComplete / numberTotal) * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n//{tasksData && tasksData.tasks && tasksData.tasks.map((task, index) => (\n  return (\n    <main>\n    <Navbar>\n      <Navitem>\n        <DropdownMenu/>\n      </Navitem>\n    </Navbar>\n      <h1>{numberComplete}/{numberTotal} Complete</h1>\n      <h2>{getMessage()}</h2>\n      <TaskForm onAdd={AddTask}/>\n      <div className=\"taskContainer\">\n        {tasks.map((task, index) => (\n          <Task\n            {...task}\n            key={index}\n            onRename={newName => renameTasks(index, newName)}\n            onTrash={() => removeTask(index)}\n            onToggle={done => updateTaskDone(index, done)}\n          />\n          ))}\n    </div>\n    </main>\n  )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}