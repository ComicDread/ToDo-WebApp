{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.1/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Task from './Task';\nimport React from 'react';\nimport TaskForm from './TaskForm';\nimport { useEffect } from \"react\";\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { googleLogout } from '@react-oauth/google';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst GET_TASKS = gql`\n  query tasks {\n    tasks {\n      name\n      done\n      id\n    }\n  }\n`;\nconst GET_USER = gql`\n  query users {\n    users {\n      name\n      token\n      tasks{\n        name\n        done\n        id\n      } \n    }\n  }\n`;\nconst ADD_TASK = gql`\nmutation newTask($input: taskInput!) {\n  newTask(input: $input) {\n    name\n    id\n  }\n}\n`;\nconst TASK_DONE = gql`\n  mutation updatedTask($id: ID!) {\n    updatedTask(id: $id) \n  }\n`;\nconst DELETE_TASK = gql`\n  mutation deletedTask($id: ID!) {\n    deletedTask(id: $id) \n  }\n`;\nconst UPDATE_TITLE = gql`\nmutation newupdatedTitleTask( $id: ID! $input: titleInput!) {\n  updatedTitle(id: $id, input: $input)\n}\n`;\nfunction App() {\n  _s();\n  var _tasksData$tasks, _userData$users;\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const {\n    data: tasksData\n  } = useQuery(GET_TASKS);\n  const {\n    data: userData\n  } = useQuery(GET_USER, {\n    variables: {\n      token: currentUserToken\n    }\n  });\n  const [updateTitleMutation] = useMutation(UPDATE_TITLE);\n  const [addTaskMutation] = useMutation(ADD_TASK);\n  const [deletedTaskMutation] = useMutation(DELETE_TASK);\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE);\n  const tasks = (_tasksData$tasks = tasksData === null || tasksData === void 0 ? void 0 : tasksData.tasks) !== null && _tasksData$tasks !== void 0 ? _tasksData$tasks : [];\n  const users = (_userData$users = userData === null || userData === void 0 ? void 0 : userData.users) !== null && _userData$users !== void 0 ? _userData$users : [];\n  const navigate = useNavigate();\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    console.log('user:' + currentUserToken);\n  }, [tasks]);\n  useEffect(() => {\n    localStorage.setItem('users', JSON.stringify(users));\n  }, [users]);\n  function AddTask(name) {\n    addTaskMutation({\n      variables: {\n        input: {\n          name: name\n        },\n        token: currentUserToken\n      },\n      update: (cache, _ref) => {\n        let {\n          data\n        } = _ref;\n        //update task\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const newTask = {\n          name: data.newTask.name,\n          done: false,\n          id: data.newTask.id\n        };\n        const updatedTasks = [...existingTasks.tasks, newTask];\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n        //update task user\n        const {\n          users\n        } = cache.readQuery({\n          query: GET_USER\n        });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USER,\n          data: {\n            users: [...users.filter(user => user.token !== currentUserToken), {\n              ...currentUser,\n              tasks: [...currentUser.tasks, newTask]\n            }]\n          }\n        });\n      }\n    });\n  }\n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id;\n    deletedTaskMutation({\n      variables: {\n        id: taskId\n      },\n      update: cache => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const updatedTasks = existingTasks.tasks.filter((task, i) => i !== index);\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n        const {\n          users\n        } = cache.readQuery({\n          query: GET_USER\n        });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USER,\n          data: {\n            users: [...users.filter(user => user.token !== currentUserToken), {\n              ...currentUser,\n              tasks: currentUser.tasks.filter(task => task.id !== taskId)\n            }]\n          }\n        });\n      }\n    });\n  }\n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        done: done\n      },\n      update: cache => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return {\n              ...task,\n              done\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n        const {\n          users\n        } = cache.readQuery({\n          query: GET_USER\n        });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USER,\n          data: {\n            users: [...users.filter(user => user.token !== currentUserToken), {\n              ...currentUser,\n              tasks: updatedTasks\n            }]\n          }\n        });\n      }\n    });\n  }\n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;\n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, _ref2) => {\n        let {\n          data\n        } = _ref2;\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return {\n              ...task,\n              name: newName\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    }).catch(error => {\n      if (error.message.includes('version_conflict_engine_exception') && error.message.includes('version conflict')) {} else {\n        console.error(error);\n      }\n    });\n  }\n  ;\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : numberComplete / numberTotal * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n  function handleLogout() {\n    googleLogout();\n    navigate('/login');\n  }\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n\n  //{tasksData && tasksData.tasks && tasksData.tasks.map((task, index) => (\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [numberComplete, \"/\", numberTotal, \" Complete\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: getMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAdd: AddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), tasks.map((task, index) => /*#__PURE__*/_createElement(Task, {\n      ...task,\n      key: index,\n      onRename: newName => renameTasks(index, newName),\n      onTrash: () => removeTask(index),\n      onToggle: done => updateTaskDone(index, done),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"out\",\n      onClick: handleLogout,\n      children: \"Disconnettiti\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9RV5JkrKt2qYYh96Hfok2Qan40Y=\", false, function () {\n  return [useQuery, useQuery, useMutation, useMutation, useMutation, useMutation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Task","React","TaskForm","useEffect","useQuery","gql","useMutation","googleLogout","useNavigate","jsxDEV","_jsxDEV","createElement","_createElement","GET_TASKS","GET_USER","ADD_TASK","TASK_DONE","DELETE_TASK","UPDATE_TITLE","App","_s","_tasksData$tasks","_userData$users","currentUserToken","JSON","parse","localStorage","getItem","data","tasksData","userData","variables","token","updateTitleMutation","addTaskMutation","deletedTaskMutation","updateTaskDoneMutation","tasks","users","navigate","setItem","stringify","console","log","AddTask","name","input","update","cache","_ref","existingTasks","readQuery","query","newTask","done","id","updatedTasks","writeQuery","currentUser","find","user","filter","removeTask","index","taskId","task","i","updateTaskDone","map","renameTasks","newName","_ref2","catch","error","message","includes","getMessage","percentage","numberTotal","numberComplete","handleLogout","t","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","key","onRename","onTrash","onToggle","__self","__source","className","onClick","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.1/client/src/App.js"],"sourcesContent":["import './App.css';\nimport Task from './Task';\nimport React from 'react';\nimport TaskForm from './TaskForm';\nimport { useEffect } from \"react\";\nimport {useQuery,gql,useMutation} from '@apollo/client'\nimport { googleLogout } from '@react-oauth/google';\nimport { useNavigate } from 'react-router-dom';\n\nconst GET_TASKS = gql`\n  query tasks {\n    tasks {\n      name\n      done\n      id\n    }\n  }\n`;\n\nconst GET_USER = gql`\n  query users {\n    users {\n      name\n      token\n      tasks{\n        name\n        done\n        id\n      } \n    }\n  }\n`;\n\nconst ADD_TASK = gql`\nmutation newTask($input: taskInput!) {\n  newTask(input: $input) {\n    name\n    id\n  }\n}\n`;\n\nconst TASK_DONE = gql`\n  mutation updatedTask($id: ID!) {\n    updatedTask(id: $id) \n  }\n`;\n\nconst DELETE_TASK = gql`\n  mutation deletedTask($id: ID!) {\n    deletedTask(id: $id) \n  }\n`;\n\nconst UPDATE_TITLE = gql`\nmutation newupdatedTitleTask( $id: ID! $input: titleInput!) {\n  updatedTitle(id: $id, input: $input)\n}\n`;\n\nfunction App() {\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const { data: tasksData } = useQuery(GET_TASKS)\n  const { data: userData } = useQuery(GET_USER, {\n    variables: {\n      token: currentUserToken\n    }\n  });\n  const [updateTitleMutation] = useMutation(UPDATE_TITLE)\n  const [addTaskMutation] = useMutation(ADD_TASK)\n  const [deletedTaskMutation] = useMutation(DELETE_TASK)\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE)\n  const tasks = tasksData?.tasks ?? []; \n  const users = userData?.users ?? []; \n\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    console.log('user:' + currentUserToken);\n  }, [tasks]);\n\n  useEffect(() => {\n    localStorage.setItem('users', JSON.stringify(users));\n  }, [users]);\n\n  function AddTask(name) {\n    addTaskMutation({\n      variables: {\n        input: {\n          name: name\n        },\n        token: currentUserToken\n      },\n      update: (cache, { data }) => {\n        //update task\n        const existingTasks = cache.readQuery({ query: GET_TASKS });\n        const newTask = {\n          name: data.newTask.name,\n          done: false,\n          id: data.newTask.id,\n        };\n        const updatedTasks = [...existingTasks.tasks, newTask];\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n        //update task user\n        const { users } = cache.readQuery({ query: GET_USER });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USER,\n          data: {\n            users: [\n              ...users.filter(user => user.token !== currentUserToken),\n              {\n                ...currentUser,\n                tasks: [...currentUser.tasks, newTask]\n              }\n            ]\n          }\n        });\n      },\n    });\n  }\n  \n  \n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id;\n    deletedTaskMutation({\n      variables: {\n        id: taskId\n      },\n      update: (cache) => {\n        const existingTasks = cache.readQuery({ query: GET_TASKS });\n        const updatedTasks = existingTasks.tasks.filter((task, i) => i !== index);\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n  \n        const { users } = cache.readQuery({ query: GET_USER });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USER,\n          data: {\n            users: [\n              ...users.filter(user => user.token !== currentUserToken),\n              {\n                ...currentUser,\n                tasks: currentUser.tasks.filter(task => task.id !== taskId)\n              }\n            ]\n          }\n        });\n      }\n    });\n  }\n  \n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        done: done\n      },\n      update: (cache) => {\n        const existingTasks = cache.readQuery({ query: GET_TASKS });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return { ...task, done };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n  \n        const { users } = cache.readQuery({ query: GET_USER });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USER,\n          data: {\n            users: [\n              ...users.filter(user => user.token !== currentUserToken),\n              {\n                ...currentUser,\n                tasks: updatedTasks\n              }\n            ]\n          }\n        });\n      }\n    });\n  }\n\n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;  \n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, { data }) => {\n          const existingTasks = cache.readQuery({ query: GET_TASKS });\n          const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return {...task, name: newName};\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n      }\n    }).catch(error => {\n      if (\n        error.message.includes('version_conflict_engine_exception') &&\n        error.message.includes('version conflict')\n      ) {\n      } else {\n        console.error(error);\n      }\n    })\n  };\n\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : (numberComplete / numberTotal) * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n\n  function handleLogout(){\n    googleLogout()\n    navigate('/login');\n  }\n  \n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n\n//{tasksData && tasksData.tasks && tasksData.tasks.map((task, index) => (\n  return (\n    <main>\n      <h1>{numberComplete}/{numberTotal} Complete</h1>\n      <h2>{getMessage()}</h2>\n      <TaskForm onAdd={AddTask}/>\n      {tasks.map((task, index) => (\n        <Task\n          {...task}\n          key={index}\n          onRename={newName => renameTasks(index, newName)}\n          onTrash={() => removeTask(index)}\n          onToggle={done => updateTaskDone(index, done)}\n        />\n      ))}\n      <button className=\"out\" onClick={handleLogout}>Disconnettiti</button>\n    </main>\n  )\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}