{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo 1.2/client/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport { gql, useMutation } from '@apollo/client';\nimport client from '../index';\nimport userimage from './icons/UserImg.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHECK_USER = gql`\n  query CheckUser($Uid: String!) {\n    CheckUser(Uid: $Uid) {\n      _id\n      userName\n    }\n  }\n`;\nconst CREATE_USER = gql`\n  mutation newUser($Uid: String!, $name: String!, $email:String!) {\n    newUser(Uid: $Uid, name: $name, email:$email){\n      _id\n      userName\n      email\n    }\n  }\n`;\nexport default function Login() {\n  _s();\n  const navigate = useNavigate();\n  const [addUserMutation] = useMutation(CREATE_USER);\n  const [username, setUsername] = useState('');\n  const [currentUserUid, setCurrentUserUid] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState(null);\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [currentUserImg, setCurrentUserImg] = useState(null);\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [loggedWithGoogle, setLoggedWithGoogle] = useState(false);\n  const [loggedWithLocal, setLoggedWithLocal] = useState(false);\n  const userImg = userimage;\n  useEffect(() => {\n    if (currentUserUid !== null) {\n      console.log('user:' + currentUserUid);\n    } else {\n      console.log('user:' + currentUserName);\n    }\n  }, []);\n  const handleSuccess = async credentialResponse => {\n    var decoded = jwt_decode(credentialResponse.credential);\n    const Uid = decoded.sub;\n    const {\n      data\n    } = await client.query({\n      query: CHECK_USER,\n      variables: {\n        _id: Uid\n      }\n    });\n    if (!data.CheckUser) {\n      console.log(data.CheckUser);\n      await addUserMutation({\n        variables: {\n          _id: Uid,\n          name: decoded.name,\n          email: decoded.email\n        },\n        update(cache, _ref) {\n          let {\n            data\n          } = _ref;\n          const newUserData = {\n            _id: data.newUser.Uid,\n            userName: data.newUser.userName,\n            email: data.newUser.email\n          };\n          console.log(data);\n          const updated = {\n            CheckUser: {\n              ...data.CheckUser,\n              ...newUserData\n            }\n          };\n          client.writeQuery({\n            query: CHECK_USER,\n            variables: {\n              Uid: Uid\n            },\n            data: updated\n          });\n        }\n      });\n      setLoggedWithGoogle(true);\n      localStorage.setItem('LoggedWithGoogle', JSON.stringify(true));\n      localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n      localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n      localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n      navigate('/');\n    } else {\n      setIsRegistered(true);\n    }\n  };\n  const handleUserData = async () => {\n    const {\n      data\n    } = await client.query({\n      query: CHECK_USER,\n      variables: {\n        username: username,\n        password: password\n      }\n    });\n    if (!data.CheckUser) {\n      await addUserMutation({\n        variables: {\n          username: username,\n          password: password\n        },\n        update(cache, _ref2) {\n          let {\n            data\n          } = _ref2;\n          const newUserData = {\n            username: data.newUser.username,\n            password: data.newUser.password,\n            email: data.newUser.email\n          };\n          const updated = {\n            CheckUser: {\n              ...data.CheckUser,\n              ...newUserData\n            }\n          };\n          client.writeQuery({\n            query: CHECK_USER,\n            variables: {\n              username: username\n            },\n            data: updated\n          });\n        }\n      });\n      setLoggedWithLocal(true);\n      localStorage.setItem('LoggedWithLocal', JSON.stringify(true));\n      localStorage.setItem('currentUserName', JSON.stringify(username));\n      localStorage.setItem('currentUserImg', JSON.stringify(userImg));\n      navigate('/');\n    } else {\n      setIsRegistered(true);\n    }\n  };\n  if (isRegistered) {\n    navigate('/Error');\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"input-field\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: handleUserData,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-text\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"google-label\",\n          children: \"O registrati con Google...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"signInButton\",\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n          clientId: \"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\",\n          children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            onSuccess: handleSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this);\n  }\n}\n_s(Login, \"fNvUcy7nrDxU2Wu9KGz/3gbZMIU=\", false, function () {\n  return [useNavigate, useMutation];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["GoogleLogin","GoogleOAuthProvider","jwt_decode","useState","useEffect","useNavigate","gql","useMutation","client","userimage","jsxDEV","_jsxDEV","CHECK_USER","CREATE_USER","Login","_s","navigate","addUserMutation","username","setUsername","currentUserUid","setCurrentUserUid","currentUserName","setCurrentUserName","password","setPassword","email","setEmail","currentUserImg","setCurrentUserImg","isRegistered","setIsRegistered","loggedWithGoogle","setLoggedWithGoogle","loggedWithLocal","setLoggedWithLocal","userImg","console","log","handleSuccess","credentialResponse","decoded","credential","Uid","sub","data","query","variables","_id","CheckUser","name","update","cache","_ref","newUserData","newUser","userName","updated","writeQuery","localStorage","setItem","JSON","stringify","given_name","picture","handleUserData","_ref2","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","id","style","display","justifyContent","alignItems","clientId","onSuccess","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo 1.2/client/src/components/Register.js"],"sourcesContent":["import { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport  {gql,useMutation} from '@apollo/client'\nimport client from '../index'\nimport userimage from './icons/UserImg.svg'\n\nconst CHECK_USER = gql`\n  query CheckUser($Uid: String!) {\n    CheckUser(Uid: $Uid) {\n      _id\n      userName\n    }\n  }\n`;\n\nconst CREATE_USER = gql`\n  mutation newUser($Uid: String!, $name: String!, $email:String!) {\n    newUser(Uid: $Uid, name: $name, email:$email){\n      _id\n      userName\n      email\n    }\n  }\n`;\n\nexport default function Login() {\n    const navigate = useNavigate();\n    const [addUserMutation] = useMutation(CREATE_USER);\n    const [username, setUsername] = useState('');\n    const [currentUserUid, setCurrentUserUid] = useState(null);\n    const [currentUserName, setCurrentUserName] = useState(null);\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [currentUserImg, setCurrentUserImg] = useState(null);\n    const [isRegistered, setIsRegistered] = useState(false); \n    const [loggedWithGoogle,setLoggedWithGoogle] = useState(false)\n    const [loggedWithLocal,setLoggedWithLocal] = useState(false)\n    const userImg = userimage\n\n    useEffect(() => {\n      if(currentUserUid !== null){\n        console.log('user:' + currentUserUid);\n      }else{\n        console.log('user:' + currentUserName);\n      }\n    }, []);\n\n    const handleSuccess = async (credentialResponse) => {\n      var decoded = jwt_decode(credentialResponse.credential);\n      const Uid = decoded.sub;\n      const { data } = await client.query({\n        query: CHECK_USER,\n        variables: { _id: Uid }\n      });\n      if (!data.CheckUser) {\n        console.log(data.CheckUser);\n        await addUserMutation({\n          variables: {\n            _id: Uid,\n            name: decoded.name,\n            email: decoded.email\n          },\n          update(cache, { data }) {\n            const newUserData = {\n              _id: data.newUser.Uid,\n              userName: data.newUser.userName,\n              email: data.newUser.email\n            }\n            console.log(data);\n            const updated = {\n              CheckUser: { ...data.CheckUser, ...newUserData }\n            };\n            client.writeQuery({\n              query: CHECK_USER,\n              variables: { Uid: Uid },\n              data: updated\n            });\n          }\n        });\n        setLoggedWithGoogle(true)\n        localStorage.setItem('LoggedWithGoogle', JSON.stringify(true));\n        localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n        localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n        localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n        navigate('/');\n      } else {\n        setIsRegistered(true);\n      }\n    };\n\n    const handleUserData = async () => {\n      const { data } = await client.query({\n        query: CHECK_USER,\n        variables: { username: username, password:password }\n      });\n      if (!data.CheckUser) {\n        await addUserMutation({\n          variables: {\n            username:username,\n            password:password\n          },\n          update(cache, { data }) {\n            const newUserData = {\n              username: data.newUser.username,\n              password: data.newUser.password,\n              email: data.newUser.email,\n            }\n            const updated = {\n              CheckUser: { ...data.CheckUser, ...newUserData }\n            };\n            client.writeQuery({\n              query: CHECK_USER,\n              variables: { username:username },\n              data: updated\n            });\n          }\n        });\n        setLoggedWithLocal(true);\n        localStorage.setItem('LoggedWithLocal', JSON.stringify(true));\n        localStorage.setItem('currentUserName', JSON.stringify(username));\n        localStorage.setItem('currentUserImg', JSON.stringify(userImg));\n        navigate('/')\n      } else {\n        setIsRegistered(true);\n      }\n    }\n  \n    if (isRegistered) {\n      navigate('/Error');\n    } else {\n      return (\n        <div>\n          <div className='input-container'>\n            <label className='input-label'>Username</label>\n            <input\n            type='text'\n            className='input-field'\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <div className='input-container'>\n            <label className='input-label'>Email</label>\n            <input\n            type='text'\n            className='input-field'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className='input-container'>\n            <label className='input-label'>Password</label>\n            <input\n              type='password'\n              className='input-field'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <div className='button-container'>\n            <button className='submit-button' onClick={handleUserData}>Submit</button>\n          </div>\n          <div className='center-text'>\n            <label className='google-label'>O registrati con Google...</label>\n          </div>\n          <div id=\"signInButton\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <GoogleOAuthProvider clientId=\"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\">\n              <GoogleLogin onSuccess={handleSuccess} />\n            </GoogleOAuthProvider>\n          </div>\n        </div>\n      );\n    }    \n  }\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}