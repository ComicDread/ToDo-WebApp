{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.2/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Task from './Task';\nimport React from 'react';\nimport TaskForm from './TaskForm';\nimport { useEffect } from \"react\";\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { googleLogout } from '@react-oauth/google';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst GET_TASKS = gql`\n  query tasks {\n    tasks {\n      name\n      done\n      id\n    }\n  }\n`;\nconst GET_USERS = gql`\n  query users {\n    users {\n      name\n      token\n      tasks{\n        name\n        done\n        id\n      } \n    }\n  }\n`;\nconst GET_USER = gql`\n  query user($token: String!) {\n    user(token: $token) {\n      name\n      token\n      tasks {\n        name\n        done\n        id\n      } \n    }\n  }\n`;\nconst ADD_TASK = gql`\nmutation newTask($input: taskInput!) {\n  newTask(input: $input) {\n    name\n    id\n  }\n}\n`;\nconst TASK_DONE = gql`\n  mutation updatedTask($id: ID!) {\n    updatedTask(id: $id) \n  }\n`;\nconst DELETE_TASK = gql`\n  mutation deletedTask($id: ID!) {\n    deletedTask(id: $id) \n  }\n`;\nconst UPDATE_TITLE = gql`\nmutation newupdatedTitleTask( $id: ID! $input: titleInput!) {\n  updatedTitle(id: $id, input: $input)\n}\n`;\nfunction App() {\n  _s();\n  var _usersData$users$find, _usersData$users$find2, _usersData$users;\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const currentUserImg = JSON.parse(localStorage.getItem('currentUserImg'));\n  const {\n    data: tasksData\n  } = useQuery(GET_TASKS);\n  const {\n    data: usersData\n  } = useQuery(GET_USERS);\n  const {\n    data: userData\n  } = useQuery(GET_USER, {\n    variables: {\n      token: currentUserToken\n    }\n  });\n  const [updateTitleMutation] = useMutation(UPDATE_TITLE);\n  const [addTaskMutation] = useMutation(ADD_TASK);\n  const [deletedTaskMutation] = useMutation(DELETE_TASK);\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE);\n  const tasks = (_usersData$users$find = usersData === null || usersData === void 0 ? void 0 : (_usersData$users$find2 = usersData.users.find(user => user.token === currentUserToken)) === null || _usersData$users$find2 === void 0 ? void 0 : _usersData$users$find2.tasks) !== null && _usersData$users$find !== void 0 ? _usersData$users$find : [];\n  const users = (_usersData$users = usersData === null || usersData === void 0 ? void 0 : usersData.users) !== null && _usersData$users !== void 0 ? _usersData$users : [];\n  const navigate = useNavigate();\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    console.log('user:' + currentUserToken);\n  }, [tasks]);\n  useEffect(() => {\n    localStorage.setItem('users', JSON.stringify(users));\n  }, [users]);\n  function AddTask(name) {\n    addTaskMutation({\n      variables: {\n        input: {\n          name: name\n        }\n      },\n      update: (cache, _ref) => {\n        let {\n          data\n        } = _ref;\n        const newTask = {\n          name: data.newTask.name,\n          done: false,\n          id: data.newTask.id\n        };\n        cache.modify({\n          fields: {\n            tasks() {\n              let existingTasks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n              const newTaskRef = cache.writeFragment({\n                data: newTask,\n                fragment: gql`\n                  fragment NewTask on Task {\n                    name\n                    done\n                    id\n                  }\n                `\n              });\n              return [...existingTasks, newTaskRef];\n            }\n          }\n        });\n      }\n    });\n  }\n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id;\n    deletedTaskMutation({\n      variables: {\n        id: taskId\n      },\n      update: cache => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const updatedTasks = existingTasks.tasks.filter((task, i) => i !== index);\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n        const {\n          users\n        } = cache.readQuery({\n          query: GET_USERS\n        });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [...users.filter(user => user.token !== currentUserToken), {\n              ...currentUser,\n              tasks: currentUser.tasks.filter(task => task.id !== taskId)\n            }]\n          }\n        });\n      }\n    });\n  }\n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        done: done\n      },\n      update: cache => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return {\n              ...task,\n              done\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n        const {\n          users\n        } = cache.readQuery({\n          query: GET_USERS\n        });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [...users.filter(user => user.token !== currentUserToken), {\n              ...currentUser,\n              tasks: updatedTasks\n            }]\n          }\n        });\n      }\n    });\n  }\n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;\n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, _ref2) => {\n        let {\n          data\n        } = _ref2;\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return {\n              ...task,\n              name: newName\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n        const {\n          users\n        } = cache.readQuery({\n          query: GET_USERS\n        });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [...users.filter(user => user.token !== currentUserToken), {\n              ...currentUser,\n              tasks: updatedTasks\n            }]\n          }\n        });\n      }\n    }).catch(error => {\n      if (error.message.includes('version_conflict_engine_exception') && error.message.includes('version conflict')) {} else {\n        console.error(error);\n      }\n    });\n  }\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : numberComplete / numberTotal * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n  function handleLogout() {\n    googleLogout();\n    localStorage.setItem('currentUserImg', JSON.stringify(null));\n    localStorage.setItem('currentUserName', JSON.stringify(null));\n    localStorage.setItem('currentUser', JSON.stringify(null));\n    navigate('/login');\n  }\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n\n  //{tasksData && tasksData.tasks && tasksData.tasks.map((task, index) => (\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: currentUserImg,\n      className: \"UserImg\",\n      alt: \"Immagine del profilo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"user\",\n      children: [\"Ciao \", currentUserName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"out\",\n        onClick: handleLogout,\n        children: \"Disconnettiti\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [numberComplete, \"/\", numberTotal, \" Complete\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: getMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAdd: AddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), tasks.map((task, index) => /*#__PURE__*/_createElement(Task, {\n      ...task,\n      key: index,\n      onRename: newName => renameTasks(index, newName),\n      onTrash: () => removeTask(index),\n      onToggle: done => updateTaskDone(index, done),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }\n    }))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+NhK9sohup19Org8DZ3PA/eg3ko=\", false, function () {\n  return [useQuery, useQuery, useQuery, useMutation, useMutation, useMutation, useMutation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Task","React","TaskForm","useEffect","useQuery","gql","useMutation","googleLogout","useNavigate","jsxDEV","_jsxDEV","createElement","_createElement","GET_TASKS","GET_USERS","GET_USER","ADD_TASK","TASK_DONE","DELETE_TASK","UPDATE_TITLE","App","_s","_usersData$users$find","_usersData$users$find2","_usersData$users","currentUserToken","JSON","parse","localStorage","getItem","currentUserName","currentUserImg","data","tasksData","usersData","userData","variables","token","updateTitleMutation","addTaskMutation","deletedTaskMutation","updateTaskDoneMutation","tasks","users","find","user","navigate","setItem","stringify","console","log","AddTask","name","input","update","cache","_ref","newTask","done","id","modify","fields","existingTasks","arguments","length","undefined","newTaskRef","writeFragment","fragment","removeTask","index","taskId","readQuery","query","updatedTasks","filter","task","i","writeQuery","currentUser","updateTaskDone","map","renameTasks","newName","_ref2","catch","error","message","includes","getMessage","percentage","numberTotal","numberComplete","handleLogout","t","children","src","className","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAdd","key","onRename","onTrash","onToggle","__self","__source","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login 1.2/client/src/App.js"],"sourcesContent":["import './App.css';\nimport Task from './Task';\nimport React from 'react';\nimport TaskForm from './TaskForm';\nimport { useEffect } from \"react\";\nimport {useQuery,gql,useMutation} from '@apollo/client'\nimport { googleLogout } from '@react-oauth/google';\nimport { useNavigate } from 'react-router-dom';\n\nconst GET_TASKS = gql`\n  query tasks {\n    tasks {\n      name\n      done\n      id\n    }\n  }\n`;\n\nconst GET_USERS = gql`\n  query users {\n    users {\n      name\n      token\n      tasks{\n        name\n        done\n        id\n      } \n    }\n  }\n`;\n\nconst GET_USER = gql`\n  query user($token: String!) {\n    user(token: $token) {\n      name\n      token\n      tasks {\n        name\n        done\n        id\n      } \n    }\n  }\n`;\n\nconst ADD_TASK = gql`\nmutation newTask($input: taskInput!) {\n  newTask(input: $input) {\n    name\n    id\n  }\n}\n`;\n\nconst TASK_DONE = gql`\n  mutation updatedTask($id: ID!) {\n    updatedTask(id: $id) \n  }\n`;\n\nconst DELETE_TASK = gql`\n  mutation deletedTask($id: ID!) {\n    deletedTask(id: $id) \n  }\n`;\n\nconst UPDATE_TITLE = gql`\nmutation newupdatedTitleTask( $id: ID! $input: titleInput!) {\n  updatedTitle(id: $id, input: $input)\n}\n`;\n\nfunction App() {\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const currentUserImg = JSON.parse(localStorage.getItem('currentUserImg'));\n  const { data: tasksData } = useQuery(GET_TASKS)\n  const { data: usersData } = useQuery(GET_USERS)\n  const { data: userData } = useQuery(GET_USER, {\n    variables: {\n      token: currentUserToken\n    }\n  });\n  \n  const [updateTitleMutation] = useMutation(UPDATE_TITLE)\n  const [addTaskMutation] = useMutation(ADD_TASK)\n  const [deletedTaskMutation] = useMutation(DELETE_TASK)\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE)\n  const tasks = usersData?.users.find(user => user.token === currentUserToken)?.tasks ?? [];\n  const users = usersData?.users ?? []; \n\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    console.log('user:' + currentUserToken);\n  }, [tasks]);\n\n  useEffect(() => {\n    localStorage.setItem('users', JSON.stringify(users));\n  }, [users]);\n\n  function AddTask(name) {\n    addTaskMutation({\n      variables: {\n        input: {\n          name: name\n        }\n      },\n      update: (cache, { data }) => {\n        const newTask = {\n          name: data.newTask.name,\n          done: false,\n          id: data.newTask.id,\n        };\n  \n        cache.modify({\n          fields: {\n            tasks(existingTasks = []) {\n              const newTaskRef = cache.writeFragment({\n                data: newTask,\n                fragment: gql`\n                  fragment NewTask on Task {\n                    name\n                    done\n                    id\n                  }\n                `\n              });\n  \n              return [...existingTasks, newTaskRef];\n            }\n          }\n        });\n      },\n    });\n  }\n  \n  \n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id;\n    deletedTaskMutation({\n      variables: {\n        id: taskId\n      },\n      update: (cache) => {\n        const existingTasks = cache.readQuery({ query: GET_TASKS });\n        const updatedTasks = existingTasks.tasks.filter((task, i) => i !== index);\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n  \n        const { users } = cache.readQuery({ query: GET_USERS });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [\n              ...users.filter(user => user.token !== currentUserToken),\n              {\n                ...currentUser,\n                tasks: currentUser.tasks.filter(task => task.id !== taskId)\n              }\n            ]\n          }\n        });\n      }\n    });\n  }\n  \n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        done: done\n      },\n      update: (cache) => {\n        const existingTasks = cache.readQuery({ query: GET_TASKS });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return { ...task, done };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n  \n        const { users } = cache.readQuery({ query: GET_USERS });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [\n              ...users.filter(user => user.token !== currentUserToken),\n              {\n                ...currentUser,\n                tasks: updatedTasks\n              }\n            ]\n          }\n        });\n      }\n    });\n  }\n\n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;\n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, { data }) => {\n        const existingTasks = cache.readQuery({ query: GET_TASKS });\n        const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return { ...task, name: newName };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n  \n        const { users } = cache.readQuery({ query: GET_USERS });\n        const currentUser = users.find(user => user.token === currentUserToken);\n        cache.writeQuery({\n          query: GET_USERS,\n          data: {\n            users: [\n              ...users.filter(user => user.token !== currentUserToken),\n              {\n                ...currentUser,\n                tasks: updatedTasks\n              }\n            ]\n          }\n        });\n      }\n    }).catch(error => {\n      if (\n        error.message.includes('version_conflict_engine_exception') &&\n        error.message.includes('version conflict')\n      ) {\n      } else {\n        console.error(error);\n      }\n    });\n  }\n\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : (numberComplete / numberTotal) * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n\n  function handleLogout(){\n    googleLogout()\n    localStorage.setItem('currentUserImg', JSON.stringify(null));\n    localStorage.setItem('currentUserName', JSON.stringify(null));\n    localStorage.setItem('currentUser', JSON.stringify(null));\n    navigate('/login');\n  }\n  \n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n\n//{tasksData && tasksData.tasks && tasksData.tasks.map((task, index) => (\n  return (\n    <main>\n      <img src={currentUserImg} className=\"UserImg\" alt=\"Immagine del profilo\" />\n      <h5 className=\"user\">Ciao {currentUserName}</h5>\n      <div className=\"container\">\n      <button className=\"out\" onClick={handleLogout}>Disconnettiti</button>\n    </div>\n      <h1>{numberComplete}/{numberTotal} Complete</h1>\n      <h2>{getMessage()}</h2>\n      <TaskForm onAdd={AddTask}/>\n      {tasks.map((task, index) => (\n        <Task\n          {...task}\n          key={index}\n          onRename={newName => renameTasks(index, newName)}\n          onTrash={() => removeTask(index)}\n          onToggle={done => updateTaskDone(index, done)}\n        />\n      ))}\n\n    </main>\n  )\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAAQC,QAAQ,EAACC,GAAG,EAACC,WAAW,QAAO,gBAAgB;AACvD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,aAAA,IAAAC,cAAA;AAE/C,MAAMC,SAAS,GAAGR,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMS,SAAS,GAAGT,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMU,QAAQ,GAAGV,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMW,QAAQ,GAAGX,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMY,SAAS,GAAGZ,GAAI;AACtB;AACA;AACA;AACA,CAAC;AAED,MAAMa,WAAW,GAAGb,GAAI;AACxB;AACA;AACA;AACA,CAAC;AAED,MAAMc,YAAY,GAAGd,GAAI;AACzB;AACA;AACA;AACA,CAAC;AAED,SAASe,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,gBAAA;EACb,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;EACxE,MAAMC,eAAe,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;EAC3E,MAAME,cAAc,GAAGL,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC;EACzE,MAAM;IAAEG,IAAI,EAAEC;EAAU,CAAC,GAAG7B,QAAQ,CAACS,SAAS,CAAC;EAC/C,MAAM;IAAEmB,IAAI,EAAEE;EAAU,CAAC,GAAG9B,QAAQ,CAACU,SAAS,CAAC;EAC/C,MAAM;IAAEkB,IAAI,EAAEG;EAAS,CAAC,GAAG/B,QAAQ,CAACW,QAAQ,EAAE;IAC5CqB,SAAS,EAAE;MACTC,KAAK,EAAEZ;IACT;EACF,CAAC,CAAC;EAEF,MAAM,CAACa,mBAAmB,CAAC,GAAGhC,WAAW,CAACa,YAAY,CAAC;EACvD,MAAM,CAACoB,eAAe,CAAC,GAAGjC,WAAW,CAACU,QAAQ,CAAC;EAC/C,MAAM,CAACwB,mBAAmB,CAAC,GAAGlC,WAAW,CAACY,WAAW,CAAC;EACtD,MAAM,CAACuB,sBAAsB,CAAC,GAAGnC,WAAW,CAACW,SAAS,CAAC;EACvD,MAAMyB,KAAK,IAAApB,qBAAA,GAAGY,SAAS,aAATA,SAAS,wBAAAX,sBAAA,GAATW,SAAS,CAAES,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACR,KAAK,KAAKZ,gBAAgB,CAAC,cAAAF,sBAAA,uBAA9DA,sBAAA,CAAgEmB,KAAK,cAAApB,qBAAA,cAAAA,qBAAA,GAAI,EAAE;EACzF,MAAMqB,KAAK,IAAAnB,gBAAA,GAAGU,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAES,KAAK,cAAAnB,gBAAA,cAAAA,gBAAA,GAAI,EAAE;EAGpC,MAAMsB,QAAQ,GAAGtC,WAAW,CAAC,CAAC;EAE9BL,SAAS,CAAC,MAAM;IACdyB,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAErB,IAAI,CAACsB,SAAS,CAACN,KAAK,CAAC,CAAC;IACpDO,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGzB,gBAAgB,CAAC;EACzC,CAAC,EAAE,CAACiB,KAAK,CAAC,CAAC;EAEXvC,SAAS,CAAC,MAAM;IACdyB,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAErB,IAAI,CAACsB,SAAS,CAACL,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,SAASQ,OAAOA,CAACC,IAAI,EAAE;IACrBb,eAAe,CAAC;MACdH,SAAS,EAAE;QACTiB,KAAK,EAAE;UACLD,IAAI,EAAEA;QACR;MACF,CAAC;MACDE,MAAM,EAAEA,CAACC,KAAK,EAAAC,IAAA,KAAe;QAAA,IAAb;UAAExB;QAAK,CAAC,GAAAwB,IAAA;QACtB,MAAMC,OAAO,GAAG;UACdL,IAAI,EAAEpB,IAAI,CAACyB,OAAO,CAACL,IAAI;UACvBM,IAAI,EAAE,KAAK;UACXC,EAAE,EAAE3B,IAAI,CAACyB,OAAO,CAACE;QACnB,CAAC;QAEDJ,KAAK,CAACK,MAAM,CAAC;UACXC,MAAM,EAAE;YACNnB,KAAKA,CAAA,EAAqB;cAAA,IAApBoB,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;cACtB,MAAMG,UAAU,GAAGX,KAAK,CAACY,aAAa,CAAC;gBACrCnC,IAAI,EAAEyB,OAAO;gBACbW,QAAQ,EAAE/D,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;cACc,CAAC,CAAC;cAEF,OAAO,CAAC,GAAGyD,aAAa,EAAEI,UAAU,CAAC;YACvC;UACF;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ;EAGA,SAASG,UAAUA,CAACC,KAAK,EAAE;IACzB,MAAMC,MAAM,GAAGtC,SAAS,CAACS,KAAK,CAAC4B,KAAK,CAAC,CAACX,EAAE;IACxCnB,mBAAmB,CAAC;MAClBJ,SAAS,EAAE;QACTuB,EAAE,EAAEY;MACN,CAAC;MACDjB,MAAM,EAAGC,KAAK,IAAK;QACjB,MAAMO,aAAa,GAAGP,KAAK,CAACiB,SAAS,CAAC;UAAEC,KAAK,EAAE5D;QAAU,CAAC,CAAC;QAC3D,MAAM6D,YAAY,GAAGZ,aAAa,CAACpB,KAAK,CAACiC,MAAM,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAKA,CAAC,KAAKP,KAAK,CAAC;QACzEf,KAAK,CAACuB,UAAU,CAAC;UACfL,KAAK,EAAE5D,SAAS;UAChBmB,IAAI,EAAE;YAAEU,KAAK,EAAEgC;UAAa;QAC9B,CAAC,CAAC;QAEF,MAAM;UAAE/B;QAAM,CAAC,GAAGY,KAAK,CAACiB,SAAS,CAAC;UAAEC,KAAK,EAAE3D;QAAU,CAAC,CAAC;QACvD,MAAMiE,WAAW,GAAGpC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACR,KAAK,KAAKZ,gBAAgB,CAAC;QACvE8B,KAAK,CAACuB,UAAU,CAAC;UACfL,KAAK,EAAE3D,SAAS;UAChBkB,IAAI,EAAE;YACJW,KAAK,EAAE,CACL,GAAGA,KAAK,CAACgC,MAAM,CAAC9B,IAAI,IAAIA,IAAI,CAACR,KAAK,KAAKZ,gBAAgB,CAAC,EACxD;cACE,GAAGsD,WAAW;cACdrC,KAAK,EAAEqC,WAAW,CAACrC,KAAK,CAACiC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACjB,EAAE,KAAKY,MAAM;YAC5D,CAAC;UAEL;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ;EAEA,SAASS,cAAcA,CAACV,KAAK,EAAEZ,IAAI,EAAE;IACnC,MAAMa,MAAM,GAAGtC,SAAS,CAACS,KAAK,CAAC4B,KAAK,CAAC,CAACX,EAAE;IACxClB,sBAAsB,CAAC;MACrBL,SAAS,EAAE;QACTuB,EAAE,EAAEY,MAAM;QACVb,IAAI,EAAEA;MACR,CAAC;MACDJ,MAAM,EAAGC,KAAK,IAAK;QACjB,MAAMO,aAAa,GAAGP,KAAK,CAACiB,SAAS,CAAC;UAAEC,KAAK,EAAE5D;QAAU,CAAC,CAAC;QAC3D,MAAM6D,YAAY,GAAGZ,aAAa,CAACpB,KAAK,CAACuC,GAAG,CAAC,CAACL,IAAI,EAAEC,CAAC,KAAK;UACxD,IAAIA,CAAC,KAAKP,KAAK,EAAE;YACf,OAAO;cAAE,GAAGM,IAAI;cAAElB;YAAK,CAAC;UAC1B;UACA,OAAOkB,IAAI;QACb,CAAC,CAAC;QACFrB,KAAK,CAACuB,UAAU,CAAC;UACfL,KAAK,EAAE5D,SAAS;UAChBmB,IAAI,EAAE;YAAEU,KAAK,EAAEgC;UAAa;QAC9B,CAAC,CAAC;QAEF,MAAM;UAAE/B;QAAM,CAAC,GAAGY,KAAK,CAACiB,SAAS,CAAC;UAAEC,KAAK,EAAE3D;QAAU,CAAC,CAAC;QACvD,MAAMiE,WAAW,GAAGpC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACR,KAAK,KAAKZ,gBAAgB,CAAC;QACvE8B,KAAK,CAACuB,UAAU,CAAC;UACfL,KAAK,EAAE3D,SAAS;UAChBkB,IAAI,EAAE;YACJW,KAAK,EAAE,CACL,GAAGA,KAAK,CAACgC,MAAM,CAAC9B,IAAI,IAAIA,IAAI,CAACR,KAAK,KAAKZ,gBAAgB,CAAC,EACxD;cACE,GAAGsD,WAAW;cACdrC,KAAK,EAAEgC;YACT,CAAC;UAEL;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ;EAEA,SAASQ,WAAWA,CAACZ,KAAK,EAAEa,OAAO,EAAE;IACnC,MAAMZ,MAAM,GAAGtC,SAAS,CAACS,KAAK,CAAC4B,KAAK,CAAC,CAACX,EAAE;IACxCrB,mBAAmB,CAAC;MAClBF,SAAS,EAAE;QACTuB,EAAE,EAAEY,MAAM;QACVlB,KAAK,EAAE;UACLD,IAAI,EAAE+B;QACR;MACF,CAAC;MACD7B,MAAM,EAAEA,CAACC,KAAK,EAAA6B,KAAA,KAAe;QAAA,IAAb;UAAEpD;QAAK,CAAC,GAAAoD,KAAA;QACtB,MAAMtB,aAAa,GAAGP,KAAK,CAACiB,SAAS,CAAC;UAAEC,KAAK,EAAE5D;QAAU,CAAC,CAAC;QAC3D,MAAM6D,YAAY,GAAGZ,aAAa,CAACpB,KAAK,CAACuC,GAAG,CAACL,IAAI,IAAI;UACnD,IAAIA,IAAI,CAACjB,EAAE,KAAKY,MAAM,EAAE;YACtB,OAAO;cAAE,GAAGK,IAAI;cAAExB,IAAI,EAAE+B;YAAQ,CAAC;UACnC;UACA,OAAOP,IAAI;QACb,CAAC,CAAC;QACFrB,KAAK,CAACuB,UAAU,CAAC;UACfL,KAAK,EAAE5D,SAAS;UAChBmB,IAAI,EAAE;YAAEU,KAAK,EAAEgC;UAAa;QAC9B,CAAC,CAAC;QAEF,MAAM;UAAE/B;QAAM,CAAC,GAAGY,KAAK,CAACiB,SAAS,CAAC;UAAEC,KAAK,EAAE3D;QAAU,CAAC,CAAC;QACvD,MAAMiE,WAAW,GAAGpC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACR,KAAK,KAAKZ,gBAAgB,CAAC;QACvE8B,KAAK,CAACuB,UAAU,CAAC;UACfL,KAAK,EAAE3D,SAAS;UAChBkB,IAAI,EAAE;YACJW,KAAK,EAAE,CACL,GAAGA,KAAK,CAACgC,MAAM,CAAC9B,IAAI,IAAIA,IAAI,CAACR,KAAK,KAAKZ,gBAAgB,CAAC,EACxD;cACE,GAAGsD,WAAW;cACdrC,KAAK,EAAEgC;YACT,CAAC;UAEL;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,CAACW,KAAK,CAACC,KAAK,IAAI;MAChB,IACEA,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,mCAAmC,CAAC,IAC3DF,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,kBAAkB,CAAC,EAC1C,CACF,CAAC,MAAM;QACLvC,OAAO,CAACqC,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC,CAAC;EACJ;EAEA,SAASG,UAAUA,CAAA,EAAG;IACpB,MAAMC,UAAU,GAAGC,WAAW,KAAK,CAAC,GAAG,CAAC,GAAIC,cAAc,GAAGD,WAAW,GAAI,GAAG;IAC/E,IAAID,UAAU,KAAK,CAAC,EAAE;MACpB,OAAO,sBAAsB;IAC/B;IACA,IAAIA,UAAU,KAAK,GAAG,EAAE;MACtB,OAAO,cAAc;IACvB;IACA,OAAO,gBAAgB;EACzB;EAEA,SAASG,YAAYA,CAAA,EAAE;IACrBtF,YAAY,CAAC,CAAC;IACdqB,YAAY,CAACmB,OAAO,CAAC,gBAAgB,EAAErB,IAAI,CAACsB,SAAS,CAAC,IAAI,CAAC,CAAC;IAC5DpB,YAAY,CAACmB,OAAO,CAAC,iBAAiB,EAAErB,IAAI,CAACsB,SAAS,CAAC,IAAI,CAAC,CAAC;IAC7DpB,YAAY,CAACmB,OAAO,CAAC,aAAa,EAAErB,IAAI,CAACsB,SAAS,CAAC,IAAI,CAAC,CAAC;IACzDF,QAAQ,CAAC,QAAQ,CAAC;EACpB;EAEA,MAAM8C,cAAc,GAAGlD,KAAK,CAACiC,MAAM,CAACmB,CAAC,IAAIA,CAAC,CAACpC,IAAI,CAAC,CAACM,MAAM;EACvD,MAAM2B,WAAW,GAAGjD,KAAK,CAACsB,MAAM;;EAElC;EACE,oBACEtD,OAAA;IAAAqF,QAAA,gBACErF,OAAA;MAAKsF,GAAG,EAAEjE,cAAe;MAACkE,SAAS,EAAC,SAAS;MAACC,GAAG,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3E5F,OAAA;MAAIuF,SAAS,EAAC,MAAM;MAAAF,QAAA,GAAC,OAAK,EAACjE,eAAe;IAAA;MAAAqE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChD5F,OAAA;MAAKuF,SAAS,EAAC,WAAW;MAAAF,QAAA,eAC1BrF,OAAA;QAAQuF,SAAS,EAAC,KAAK;QAACM,OAAO,EAAEV,YAAa;QAAAE,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACJ5F,OAAA;MAAAqF,QAAA,GAAKH,cAAc,EAAC,GAAC,EAACD,WAAW,EAAC,WAAS;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChD5F,OAAA;MAAAqF,QAAA,EAAKN,UAAU,CAAC;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvB5F,OAAA,CAACR,QAAQ;MAACsG,KAAK,EAAErD;IAAQ;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAC1B5D,KAAK,CAACuC,GAAG,CAAC,CAACL,IAAI,EAAEN,KAAK,kBACrB1D,cAAA,CAACZ,IAAI;MAAA,GACC4E,IAAI;MACR6B,GAAG,EAAEnC,KAAM;MACXoC,QAAQ,EAAEvB,OAAO,IAAID,WAAW,CAACZ,KAAK,EAAEa,OAAO,CAAE;MACjDwB,OAAO,EAAEA,CAAA,KAAMtC,UAAU,CAACC,KAAK,CAAE;MACjCsC,QAAQ,EAAElD,IAAI,IAAIsB,cAAc,CAACV,KAAK,EAAEZ,IAAI,CAAE;MAAAmD,MAAA;MAAAC,QAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAC/C,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAGX;AAACjF,EAAA,CAxOQD,GAAG;EAAA,QAIkBhB,QAAQ,EACRA,QAAQ,EACTA,QAAQ,EAMLE,WAAW,EACfA,WAAW,EACPA,WAAW,EACRA,WAAW,EAK3BE,WAAW;AAAA;AAAAuG,EAAA,GApBrB3F,GAAG;AA0OZ,eAAeA,GAAG;AAAC,IAAA2F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}