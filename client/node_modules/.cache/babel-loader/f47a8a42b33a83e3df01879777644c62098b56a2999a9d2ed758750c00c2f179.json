{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo 1.2/client/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport { gql, useMutation } from '@apollo/client';\nimport client from '../index';\nimport userimage from './icons/UserImg.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHECK_USER = gql`\n  query CheckUserRegistered($_id: ID!) {\n    CheckUserRegistered(_id: $_id ){\n      _id\n    } \n  }\n`;\nconst CHECK_USER_DATA = gql`\n  query CheckUser($_id: ID! ) {\n    CheckUser(_id: $_id ) {\n      _id\n      userName\n      email\n    }\n  }\n`;\nconst CREATE_USER = gql`\n  mutation newUser($_id: ID!, $userName: String!, $email:String!, $password:String!) {\n    newUser(_id: $_id, userName: $userName, email:$email, password:$password){\n      _id\n      userName\n      email\n      password\n    }\n  }\n`;\nexport default function Login() {\n  _s();\n  const navigate = useNavigate();\n  const [addUserMutation] = useMutation(CREATE_USER);\n  const [username, setUsername] = useState('');\n  const [currentUserUid] = useState(null);\n  const [currentUserName] = useState(null);\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [loggedWithGoogle, setLoggedWithGoogle] = useState(false);\n  const [loggedWithLocal, setLoggedWithLocal] = useState(false);\n  const userImg = userimage;\n  useEffect(() => {\n    if (currentUserUid !== null) {\n      console.log('user:' + currentUserUid);\n    } else {\n      console.log('user:' + currentUserName);\n    }\n  }, []);\n  const handleSuccess = async credentialResponse => {\n    var decoded = jwt_decode(credentialResponse.credential);\n    const Uid = decoded.sub;\n    const {\n      data\n    } = await client.query({\n      query: CHECK_USER,\n      variables: {\n        _id: Uid\n      }\n    });\n    if (!data.CheckUserRegistered) {\n      await addUserMutation({\n        variables: {\n          _id: Uid,\n          userName: decoded.name,\n          email: decoded.email,\n          password: ''\n        },\n        update(cache, _ref) {\n          let {\n            data\n          } = _ref;\n          const newUserData = {\n            _id: data.newUser._id,\n            userName: data.newUser.userName,\n            email: data.newUser.email\n          };\n          const updated = {\n            CheckUser: {\n              ...newUserData\n            }\n          };\n          cache.writeQuery({\n            query: CHECK_USER_DATA,\n            variables: {\n              _id: Uid\n            },\n            data: updated\n          });\n        }\n      });\n      setLoggedWithGoogle(true);\n      localStorage.setItem('LoggedWithGoogle', JSON.stringify(true));\n      localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n      localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n      localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n      navigate('/');\n    } else {\n      setIsRegistered(true);\n    }\n  };\n  const handleUserData = async () => {\n    const _id = email;\n    const {\n      data\n    } = await client.query({\n      query: CHECK_USER,\n      variables: {\n        _id: _id\n      }\n    });\n    if (!data.CheckUserRegistered) {\n      await addUserMutation({\n        variables: {\n          _id: _id,\n          userName: username,\n          email: email,\n          password: password\n        },\n        update(cache, _ref2) {\n          let {\n            data\n          } = _ref2;\n          const newUserData = {\n            _id: data.newUser._id,\n            userName: data.newUser.userName,\n            email: data.newUser.email\n          };\n          console.log(newUserData);\n          const updated = {\n            CheckUser: {\n              ...newUserData\n            }\n          };\n          client.writeQuery({\n            query: CHECK_USER_DATA,\n            variables: {\n              _id: _id\n            },\n            data: updated\n          });\n        }\n      });\n      setLoggedWithLocal(true);\n      localStorage.setItem('currentUser', JSON.stringify(_id));\n      localStorage.setItem('LoggedWithLocal', JSON.stringify(true));\n      localStorage.setItem('currentUserName', JSON.stringify(username));\n      localStorage.setItem('currentUserImg', JSON.stringify(userImg));\n      navigate('/');\n    } else {\n      setIsRegistered(true);\n    }\n  };\n  if (isRegistered) {\n    navigate('/Error');\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"input-field\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: handleUserData,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-text\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"google-label\",\n          children: \"O registrati con Google...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"signInButton\",\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n          clientId: \"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\",\n          children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            onSuccess: handleSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this);\n  }\n}\n_s(Login, \"tk6OFMWEiDh3PRoNxdlLXm5zlCg=\", false, function () {\n  return [useNavigate, useMutation];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["GoogleLogin","GoogleOAuthProvider","jwt_decode","useState","useEffect","useNavigate","gql","useMutation","client","userimage","jsxDEV","_jsxDEV","CHECK_USER","CHECK_USER_DATA","CREATE_USER","Login","_s","navigate","addUserMutation","username","setUsername","currentUserUid","currentUserName","password","setPassword","email","setEmail","isRegistered","setIsRegistered","loggedWithGoogle","setLoggedWithGoogle","loggedWithLocal","setLoggedWithLocal","userImg","console","log","handleSuccess","credentialResponse","decoded","credential","Uid","sub","data","query","variables","_id","CheckUserRegistered","userName","name","update","cache","_ref","newUserData","newUser","updated","CheckUser","writeQuery","localStorage","setItem","JSON","stringify","given_name","picture","handleUserData","_ref2","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","id","style","display","justifyContent","alignItems","clientId","onSuccess","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo 1.2/client/src/components/Register.js"],"sourcesContent":["import { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport  {gql,useMutation} from '@apollo/client'\nimport client from '../index'\nimport userimage from './icons/UserImg.svg'\n\nconst CHECK_USER = gql`\n  query CheckUserRegistered($_id: ID!) {\n    CheckUserRegistered(_id: $_id ){\n      _id\n    } \n  }\n`;\n\nconst CHECK_USER_DATA = gql`\n  query CheckUser($_id: ID! ) {\n    CheckUser(_id: $_id ) {\n      _id\n      userName\n      email\n    }\n  }\n`;\n\nconst CREATE_USER = gql`\n  mutation newUser($_id: ID!, $userName: String!, $email:String!, $password:String!) {\n    newUser(_id: $_id, userName: $userName, email:$email, password:$password){\n      _id\n      userName\n      email\n      password\n    }\n  }\n`;\n\nexport default function Login() {\n    const navigate = useNavigate();\n    const [addUserMutation] = useMutation(CREATE_USER);\n    const [username, setUsername] = useState('');\n    const [currentUserUid] = useState(null);\n    const [currentUserName] = useState(null);\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [isRegistered, setIsRegistered] = useState(false); \n    const [loggedWithGoogle,setLoggedWithGoogle] = useState(false)\n    const [loggedWithLocal,setLoggedWithLocal] = useState(false)\n    const userImg = userimage\n\n    useEffect(() => {\n      if(currentUserUid !== null){\n        console.log('user:' + currentUserUid);\n      }else{\n        console.log('user:' + currentUserName);\n      }\n    }, []);\n\n    const handleSuccess = async (credentialResponse) => {\n      var decoded = jwt_decode(credentialResponse.credential);\n      const Uid = decoded.sub;\n      const { data } = await client.query({\n        query: CHECK_USER,\n        variables: { _id: Uid }\n      });\n      if (!data.CheckUserRegistered) {\n        await addUserMutation({\n          variables: {\n            _id: Uid,\n            userName: decoded.name,\n            email: decoded.email,\n            password: ''\n          },\n          update(cache, { data }) {\n            const newUserData = {\n              _id: data.newUser._id,\n              userName: data.newUser.userName,\n              email: data.newUser.email,\n            };\n            const updated = {\n              CheckUser: { ...newUserData }\n            };\n            cache.writeQuery({\n              query: CHECK_USER_DATA,\n              variables: { _id: Uid },\n              data: updated\n            });\n          }\n        });\n    \n        setLoggedWithGoogle(true)\n        localStorage.setItem('LoggedWithGoogle', JSON.stringify(true));\n        localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n        localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n        localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n        navigate('/');\n      } else {\n        setIsRegistered(true);\n      }\n    };\n    \n\n    const handleUserData = async () => {\n      const _id = email\n      const { data } = await client.query({\n        query: CHECK_USER,\n        variables: { _id:_id }\n      });\n      if (!data.CheckUserRegistered) {\n        await addUserMutation({\n          variables: {\n            _id:_id,\n            userName:username,\n            email:email,\n            password:password\n          },\n          update(cache, { data }) {\n            const newUserData = {\n              _id: data.newUser._id,\n              userName: data.newUser.userName,\n              email: data.newUser.email,\n            }\n            console.log(newUserData);\n            const updated = {\n              CheckUser: {...newUserData }\n            };\n            client.writeQuery({\n              query: CHECK_USER_DATA,\n              variables: { _id:_id },\n              data: updated\n            });\n          }\n        });\n        setLoggedWithLocal(true);\n        localStorage.setItem('currentUser', JSON.stringify(_id));\n        localStorage.setItem('LoggedWithLocal', JSON.stringify(true));\n        localStorage.setItem('currentUserName', JSON.stringify(username));\n        localStorage.setItem('currentUserImg', JSON.stringify(userImg));\n        navigate('/')\n      } else {\n        setIsRegistered(true);\n      }\n    }\n  \n    if (isRegistered) {\n      navigate('/Error');\n    } else {\n      return (\n        <div>\n          <div className='input-container'>\n            <label className='input-label'>Username</label>\n            <input\n            type='text'\n            className='input-field'\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <div className='input-container'>\n            <label className='input-label'>Email</label>\n            <input\n            type='text'\n            className='input-field'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className='input-container'>\n            <label className='input-label'>Password</label>\n            <input\n              type='password'\n              className='input-field'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <div className='button-container'>\n            <button className='submit-button' onClick={handleUserData}>Submit</button>\n          </div>\n          <div className='center-text'>\n            <label className='google-label'>O registrati con Google...</label>\n          </div>\n          <div id=\"signInButton\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <GoogleOAuthProvider clientId=\"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\">\n              <GoogleLogin onSuccess={handleSuccess} />\n            </GoogleOAuthProvider>\n          </div>\n        </div>\n      );\n    }    \n  }\n  "],"mappings":";;AAAA,SAASA,WAAW,EAAEC,mBAAmB,QAAQ,qBAAqB;AACtE,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,kBAAkB;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,EAACC,WAAW,QAAO,gBAAgB;AAC/C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,SAAS,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAGN,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMO,eAAe,GAAGP,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMQ,WAAW,GAAGR,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASS,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACa,eAAe,CAAC,GAAGX,WAAW,CAACO,WAAW,CAAC;EAClD,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAM,CAACmB,eAAe,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC0B,gBAAgB,EAACC,mBAAmB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC9D,MAAM,CAAC4B,eAAe,EAACC,kBAAkB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAC5D,MAAM8B,OAAO,GAAGxB,SAAS;EAEzBL,SAAS,CAAC,MAAM;IACd,IAAGiB,cAAc,KAAK,IAAI,EAAC;MACzBa,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGd,cAAc,CAAC;IACvC,CAAC,MAAI;MACHa,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGb,eAAe,CAAC;IACxC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,aAAa,GAAG,MAAOC,kBAAkB,IAAK;IAClD,IAAIC,OAAO,GAAGpC,UAAU,CAACmC,kBAAkB,CAACE,UAAU,CAAC;IACvD,MAAMC,GAAG,GAAGF,OAAO,CAACG,GAAG;IACvB,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMlC,MAAM,CAACmC,KAAK,CAAC;MAClCA,KAAK,EAAE/B,UAAU;MACjBgC,SAAS,EAAE;QAAEC,GAAG,EAAEL;MAAI;IACxB,CAAC,CAAC;IACF,IAAI,CAACE,IAAI,CAACI,mBAAmB,EAAE;MAC7B,MAAM5B,eAAe,CAAC;QACpB0B,SAAS,EAAE;UACTC,GAAG,EAAEL,GAAG;UACRO,QAAQ,EAAET,OAAO,CAACU,IAAI;UACtBvB,KAAK,EAAEa,OAAO,CAACb,KAAK;UACpBF,QAAQ,EAAE;QACZ,CAAC;QACD0B,MAAMA,CAACC,KAAK,EAAAC,IAAA,EAAY;UAAA,IAAV;YAAET;UAAK,CAAC,GAAAS,IAAA;UACpB,MAAMC,WAAW,GAAG;YAClBP,GAAG,EAAEH,IAAI,CAACW,OAAO,CAACR,GAAG;YACrBE,QAAQ,EAAEL,IAAI,CAACW,OAAO,CAACN,QAAQ;YAC/BtB,KAAK,EAAEiB,IAAI,CAACW,OAAO,CAAC5B;UACtB,CAAC;UACD,MAAM6B,OAAO,GAAG;YACdC,SAAS,EAAE;cAAE,GAAGH;YAAY;UAC9B,CAAC;UACDF,KAAK,CAACM,UAAU,CAAC;YACfb,KAAK,EAAE9B,eAAe;YACtB+B,SAAS,EAAE;cAAEC,GAAG,EAAEL;YAAI,CAAC;YACvBE,IAAI,EAAEY;UACR,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MAEFxB,mBAAmB,CAAC,IAAI,CAAC;MACzB2B,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC,CAAC;MAC9DH,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACtB,OAAO,CAACG,GAAG,CAAC,CAAC;MAChEgB,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAEC,IAAI,CAACC,SAAS,CAACtB,OAAO,CAACuB,UAAU,CAAC,CAAC;MAC3EJ,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACtB,OAAO,CAACwB,OAAO,CAAC,CAAC;MACvE7C,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACLW,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAGD,MAAMmC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMlB,GAAG,GAAGpB,KAAK;IACjB,MAAM;MAAEiB;IAAK,CAAC,GAAG,MAAMlC,MAAM,CAACmC,KAAK,CAAC;MAClCA,KAAK,EAAE/B,UAAU;MACjBgC,SAAS,EAAE;QAAEC,GAAG,EAACA;MAAI;IACvB,CAAC,CAAC;IACF,IAAI,CAACH,IAAI,CAACI,mBAAmB,EAAE;MAC7B,MAAM5B,eAAe,CAAC;QACpB0B,SAAS,EAAE;UACTC,GAAG,EAACA,GAAG;UACPE,QAAQ,EAAC5B,QAAQ;UACjBM,KAAK,EAACA,KAAK;UACXF,QAAQ,EAACA;QACX,CAAC;QACD0B,MAAMA,CAACC,KAAK,EAAAc,KAAA,EAAY;UAAA,IAAV;YAAEtB;UAAK,CAAC,GAAAsB,KAAA;UACpB,MAAMZ,WAAW,GAAG;YAClBP,GAAG,EAAEH,IAAI,CAACW,OAAO,CAACR,GAAG;YACrBE,QAAQ,EAAEL,IAAI,CAACW,OAAO,CAACN,QAAQ;YAC/BtB,KAAK,EAAEiB,IAAI,CAACW,OAAO,CAAC5B;UACtB,CAAC;UACDS,OAAO,CAACC,GAAG,CAACiB,WAAW,CAAC;UACxB,MAAME,OAAO,GAAG;YACdC,SAAS,EAAE;cAAC,GAAGH;YAAY;UAC7B,CAAC;UACD5C,MAAM,CAACgD,UAAU,CAAC;YAChBb,KAAK,EAAE9B,eAAe;YACtB+B,SAAS,EAAE;cAAEC,GAAG,EAACA;YAAI,CAAC;YACtBH,IAAI,EAAEY;UACR,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MACFtB,kBAAkB,CAAC,IAAI,CAAC;MACxByB,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACf,GAAG,CAAC,CAAC;MACxDY,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC,CAAC;MAC7DH,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAEC,IAAI,CAACC,SAAS,CAACzC,QAAQ,CAAC,CAAC;MACjEsC,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAAC3B,OAAO,CAAC,CAAC;MAC/DhB,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACLW,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAED,IAAID,YAAY,EAAE;IAChBV,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC,MAAM;IACL,oBACEN,OAAA;MAAAsD,QAAA,gBACEtD,OAAA;QAAKuD,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAC9BtD,OAAA;UAAOuD,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/C3D,OAAA;UACA4D,IAAI,EAAC,MAAM;UACXL,SAAS,EAAC,aAAa;UACvBM,KAAK,EAAErD,QAAS;UAChBsD,QAAQ,EAAGC,CAAC,IAAKtD,WAAW,CAACsD,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN3D,OAAA;QAAKuD,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAC9BtD,OAAA;UAAOuD,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5C3D,OAAA;UACA4D,IAAI,EAAC,MAAM;UACXL,SAAS,EAAC,aAAa;UACvBM,KAAK,EAAE/C,KAAM;UACbgD,QAAQ,EAAGC,CAAC,IAAKhD,QAAQ,CAACgD,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN3D,OAAA;QAAKuD,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAC9BtD,OAAA;UAAOuD,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/C3D,OAAA;UACE4D,IAAI,EAAC,UAAU;UACfL,SAAS,EAAC,aAAa;UACvBM,KAAK,EAAEjD,QAAS;UAChBkD,QAAQ,EAAGC,CAAC,IAAKlD,WAAW,CAACkD,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN3D,OAAA;QAAKuD,SAAS,EAAC,kBAAkB;QAAAD,QAAA,eAC/BtD,OAAA;UAAQuD,SAAS,EAAC,eAAe;UAACU,OAAO,EAAEb,cAAe;UAAAE,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eACN3D,OAAA;QAAKuD,SAAS,EAAC,aAAa;QAAAD,QAAA,eAC1BtD,OAAA;UAAOuD,SAAS,EAAC,cAAc;UAAAD,QAAA,EAAC;QAA0B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eACN3D,OAAA;QAAKkE,EAAE,EAAC,cAAc;QAACC,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAhB,QAAA,eAChGtD,OAAA,CAACV,mBAAmB;UAACiF,QAAQ,EAAC,2EAA2E;UAAAjB,QAAA,eACvGtD,OAAA,CAACX,WAAW;YAACmF,SAAS,EAAE/C;UAAc;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAACtD,EAAA,CAzJqBD,KAAK;EAAA,QACRV,WAAW,EACFE,WAAW;AAAA;AAAA6E,EAAA,GAFjBrE,KAAK;AAAA,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}