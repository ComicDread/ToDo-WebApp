{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Task from './Task';\nimport React from 'react';\nimport TaskForm from './TaskForm';\nimport { useEffect } from \"react\";\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { googleLogout } from '@react-oauth/google';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst GET_TASKS = gql`\n  query tasks {\n    tasks {\n      name\n      done\n      id\n    }\n  }\n`;\nconst GET_USER = gql`\n  query users {\n    users {\n      name\n      token\n      tasks{\n        name\n        done\n        id\n      } \n    }\n  }\n`;\nconst ADD_TASK = gql`\nmutation newTask($input: taskInput!) {\n  newTask(input: $input) {\n    name\n    id\n  }\n}\n`;\nconst TASK_DONE = gql`\n  mutation updatedTask($id: ID!) {\n    updatedTask(id: $id) \n  }\n`;\nconst DELETE_TASK = gql`\n  mutation deletedTask($id: ID!) {\n    deletedTask(id: $id) \n  }\n`;\nconst UPDATE_TITLE = gql`\nmutation newupdatedTitleTask( $id: ID! $input: titleInput!) {\n  updatedTitle(id: $id, input: $input)\n}\n`;\nfunction App() {\n  _s();\n  var _tasksData$tasks, _userData$users;\n  const {\n    data: tasksData\n  } = useQuery(GET_TASKS);\n  const {\n    data: userData\n  } = useQuery(GET_USER, {\n    variables: {\n      token: currentUserToken\n    },\n    skip: !currentUserToken\n  });\n  const [updateTitleMutation] = useMutation(UPDATE_TITLE);\n  const [addTaskMutation] = useMutation(ADD_TASK);\n  const [deletedTaskMutation] = useMutation(DELETE_TASK);\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE);\n  const tasks = (_tasksData$tasks = tasksData === null || tasksData === void 0 ? void 0 : tasksData.tasks) !== null && _tasksData$tasks !== void 0 ? _tasksData$tasks : [];\n  const users = (_userData$users = userData === null || userData === void 0 ? void 0 : userData.users) !== null && _userData$users !== void 0 ? _userData$users : [];\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const navigate = useNavigate();\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    console.log('user:' + currentUserToken);\n  }, [tasks]);\n  useEffect(() => {\n    localStorage.setItem('users', JSON.stringify(users));\n  }, [users]);\n  function AddTask(name) {\n    addTaskMutation({\n      variables: {\n        input: {\n          name: name\n        },\n        token: currentUserToken\n      },\n      update: (cache, _ref) => {\n        let {\n          data\n        } = _ref;\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const newTask = {\n          name: data.newTask.name,\n          done: false,\n          id: data.newTask.id\n        };\n        const updatedTasks = [...existingTasks.tasks, newTask];\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      },\n      update: (cache, _ref2) => {\n        let {\n          data\n        } = _ref2;\n        const existingUser = cache.readQuery({\n          query: GET_USER,\n          variables: {\n            token: currentUserToken\n          }\n        });\n\n        // Aggiorna solo i dati dell'utente corrente\n        const updatedUser = {\n          ...existingUser.user,\n          tasks: [...existingUser.user.tasks, data.newTask]\n        };\n        cache.writeQuery({\n          query: GET_USER,\n          variables: {\n            token: currentUserToken\n          },\n          data: {\n            user: updatedUser\n          } // Aggiorna solo i dati dell'utente corrente\n        });\n      }\n    });\n  }\n\n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id;\n    deletedTaskMutation({\n      variables: {\n        id: taskId\n      },\n      update: cache => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const updatedTasks = existingTasks.tasks.filter((task, i) => i !== index);\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    });\n  }\n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        done: done\n      },\n      update: cache => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return {\n              ...task,\n              done\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    });\n  }\n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;\n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, _ref3) => {\n        let {\n          data\n        } = _ref3;\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS\n        });\n        const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return {\n              ...task,\n              name: newName\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    }).catch(error => {\n      if (error.message.includes('version_conflict_engine_exception') && error.message.includes('version conflict')) {} else {\n        console.error(error);\n      }\n    });\n  }\n  ;\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : numberComplete / numberTotal * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n  function handleLogout() {\n    googleLogout();\n    navigate('/login');\n  }\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n\n  //{tasksData && tasksData.tasks && tasksData.tasks.map((task, index) => (\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [numberComplete, \"/\", numberTotal, \" Complete\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: getMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAdd: AddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), tasks.map((task, index) => /*#__PURE__*/_createElement(Task, {\n      ...task,\n      key: index,\n      onRename: newName => renameTasks(index, newName),\n      onTrash: () => removeTask(index),\n      onToggle: done => updateTaskDone(index, done),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"out\",\n      onClick: handleLogout,\n      children: \"Disconnettiti\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9RV5JkrKt2qYYh96Hfok2Qan40Y=\", false, function () {\n  return [useQuery, useQuery, useMutation, useMutation, useMutation, useMutation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Task","React","TaskForm","useEffect","useQuery","gql","useMutation","googleLogout","useNavigate","jsxDEV","_jsxDEV","createElement","_createElement","GET_TASKS","GET_USER","ADD_TASK","TASK_DONE","DELETE_TASK","UPDATE_TITLE","App","_s","_tasksData$tasks","_userData$users","data","tasksData","userData","variables","token","currentUserToken","skip","updateTitleMutation","addTaskMutation","deletedTaskMutation","updateTaskDoneMutation","tasks","users","JSON","parse","localStorage","getItem","navigate","setItem","stringify","console","log","AddTask","name","input","update","cache","_ref","existingTasks","readQuery","query","newTask","done","id","updatedTasks","writeQuery","_ref2","existingUser","updatedUser","user","removeTask","index","taskId","filter","task","i","updateTaskDone","map","renameTasks","newName","_ref3","catch","error","message","includes","getMessage","percentage","numberTotal","numberComplete","handleLogout","t","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","key","onRename","onTrash","onToggle","__self","__source","className","onClick","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login/client/src/App.js"],"sourcesContent":["import './App.css';\nimport Task from './Task';\nimport React from 'react';\nimport TaskForm from './TaskForm';\nimport { useEffect } from \"react\";\nimport {useQuery,gql,useMutation} from '@apollo/client'\nimport { googleLogout } from '@react-oauth/google';\nimport { useNavigate } from 'react-router-dom';\n\nconst GET_TASKS = gql`\n  query tasks {\n    tasks {\n      name\n      done\n      id\n    }\n  }\n`;\n\nconst GET_USER = gql`\n  query users {\n    users {\n      name\n      token\n      tasks{\n        name\n        done\n        id\n      } \n    }\n  }\n`;\n\nconst ADD_TASK = gql`\nmutation newTask($input: taskInput!) {\n  newTask(input: $input) {\n    name\n    id\n  }\n}\n`;\n\nconst TASK_DONE = gql`\n  mutation updatedTask($id: ID!) {\n    updatedTask(id: $id) \n  }\n`;\n\nconst DELETE_TASK = gql`\n  mutation deletedTask($id: ID!) {\n    deletedTask(id: $id) \n  }\n`;\n\nconst UPDATE_TITLE = gql`\nmutation newupdatedTitleTask( $id: ID! $input: titleInput!) {\n  updatedTitle(id: $id, input: $input)\n}\n`;\n\nfunction App() {\n  const { data: tasksData } = useQuery(GET_TASKS)\n  const { data: userData } = useQuery(GET_USER, {\n    variables: { token: currentUserToken },\n    skip: !currentUserToken\n  });\n    const [updateTitleMutation] = useMutation(UPDATE_TITLE)\n  const [addTaskMutation] = useMutation(ADD_TASK)\n  const [deletedTaskMutation] = useMutation(DELETE_TASK)\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE)\n  const tasks = tasksData?.tasks ?? []; \n  const users = userData?.users ?? []; \n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    console.log('user:' + currentUserToken);\n  }, [tasks]);\n\n  useEffect(() => {\n    localStorage.setItem('users', JSON.stringify(users));\n  }, [users]);\n\n  function AddTask(name) {\n    addTaskMutation({\n      variables: {\n        input: {\n          name: name\n        },\n        token: currentUserToken\n      },\n      update: (cache,{ data }) => {\n        const existingTasks = cache.readQuery({ query: GET_TASKS });\n        const newTask = {\n          name: data.newTask.name,\n          done: false,\n          id: data.newTask.id,\n        };\n        const updatedTasks = [...existingTasks.tasks, newTask];\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n      },\n      update: (cache, { data }) => {\n        const existingUser = cache.readQuery({\n          query: GET_USER,\n          variables: { token: currentUserToken }\n        });\n        \n        // Aggiorna solo i dati dell'utente corrente\n        const updatedUser = {\n          ...existingUser.user,\n          tasks: [...existingUser.user.tasks, data.newTask]\n        };\n      \n        cache.writeQuery({\n          query: GET_USER,\n          variables: { token: currentUserToken },\n          data: { user: updatedUser } // Aggiorna solo i dati dell'utente corrente\n        });\n      }\n      \n    });\n  }\n  \n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id;\n    deletedTaskMutation({\n      variables: {\n        id: taskId\n      },\n      update: (cache) => {\n        const existingTasks = cache.readQuery({ query: GET_TASKS });\n        const updatedTasks = existingTasks.tasks.filter((task, i) => i !== index);\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n      }\n    });\n  }\n  \n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        done: done\n      },\n      update: (cache) => {\n        const existingTasks = cache.readQuery({ query: GET_TASKS });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return { ...task, done };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n      }\n    });\n  }\n\n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;  \n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, { data }) => {\n          const existingTasks = cache.readQuery({ query: GET_TASKS });\n          const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return {...task, name: newName};\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          data: { tasks: updatedTasks }\n        });\n      }\n    }).catch(error => {\n      if (\n        error.message.includes('version_conflict_engine_exception') &&\n        error.message.includes('version conflict')\n      ) {\n      } else {\n        console.error(error);\n      }\n    })\n  };\n\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : (numberComplete / numberTotal) * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n\n  function handleLogout(){\n    googleLogout()\n    navigate('/login');\n  }\n  \n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n\n//{tasksData && tasksData.tasks && tasksData.tasks.map((task, index) => (\n  return (\n    <main>\n      <h1>{numberComplete}/{numberTotal} Complete</h1>\n      <h2>{getMessage()}</h2>\n      <TaskForm onAdd={AddTask}/>\n      {tasks.map((task, index) => (\n        <Task\n          {...task}\n          key={index}\n          onRename={newName => renameTasks(index, newName)}\n          onTrash={() => removeTask(index)}\n          onToggle={done => updateTaskDone(index, done)}\n        />\n      ))}\n      <button className=\"out\" onClick={handleLogout}>Disconnettiti</button>\n    </main>\n  )\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}