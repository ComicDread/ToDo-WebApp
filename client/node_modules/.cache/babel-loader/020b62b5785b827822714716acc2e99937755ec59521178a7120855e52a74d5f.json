{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Task from './components/Task';\nimport React from 'react';\nimport TaskForm from './components/TaskForm';\nimport { useEffect } from \"react\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_TASKS, TASK_DONE, DELETE_TASK, UPDATE_TITLE } from './queries/query';\nimport DropdownMenu from './components/navbar/dropdown';\nimport Navbar from './components/navbar/nav';\nimport Navitem from './components/navbar/item';\nimport AddTask from './components/functions/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nfunction App() {\n  _s();\n  var _tasksData$tasks;\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const {\n    data: tasksData\n  } = useQuery(GET_TASKS, {\n    variables: {\n      token: currentUserToken,\n      userName: currentUserName\n    }\n  });\n  const [updateTitleMutation] = useMutation(UPDATE_TITLE);\n  const [deletedTaskMutation] = useMutation(DELETE_TASK);\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE);\n  const tasks = (_tasksData$tasks = tasksData === null || tasksData === void 0 ? void 0 : tasksData.tasks) !== null && _tasksData$tasks !== void 0 ? _tasksData$tasks : [];\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    console.log('action from user:' + currentUserToken);\n  }, [tasks]);\n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id;\n    deletedTaskMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken\n      },\n      update: cache => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.filter(task => task.id !== taskId);\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    });\n  }\n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        done: done\n      },\n      update: cache => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return {\n              ...task,\n              done\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    });\n  }\n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;\n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, _ref) => {\n        let {\n          data\n        } = _ref;\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return {\n              ...task,\n              taskName: newName\n            };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: {\n            tasks: updatedTasks\n          }\n        });\n      }\n    }).catch(error => {\n      if (error.message.includes('version_conflict_engine_exception') && error.message.includes('version conflict')) {} else {\n        console.error(error);\n      }\n    });\n  }\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : numberComplete / numberTotal * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      children: /*#__PURE__*/_jsxDEV(Navitem, {\n        children: /*#__PURE__*/_jsxDEV(DropdownMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [numberComplete, \"/\", numberTotal, \" Complete\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: getMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAdd: AddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskContainer\",\n      children: tasks.map((task, index) => /*#__PURE__*/_createElement(Task, {\n        ...task,\n        key: index,\n        onRename: newName => renameTasks(index, newName),\n        onTrash: () => removeTask(index),\n        onToggle: done => updateTaskDone(index, done),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SEJ91LtnY7rRHXOwkzgbfDXJDKw=\", false, function () {\n  return [useQuery, useMutation, useMutation, useMutation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Task","React","TaskForm","useEffect","useQuery","useMutation","GET_TASKS","TASK_DONE","DELETE_TASK","UPDATE_TITLE","DropdownMenu","Navbar","Navitem","AddTask","jsxDEV","_jsxDEV","createElement","_createElement","App","_s","_tasksData$tasks","currentUserToken","JSON","parse","localStorage","getItem","currentUserName","data","tasksData","variables","token","userName","updateTitleMutation","deletedTaskMutation","updateTaskDoneMutation","tasks","numberComplete","filter","t","done","length","numberTotal","setItem","stringify","console","log","removeTask","index","taskId","id","update","cache","existingTasks","readQuery","query","updatedTasks","task","writeQuery","updateTaskDone","map","i","renameTasks","newName","input","name","_ref","taskName","catch","error","message","includes","getMessage","percentage","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","className","key","onRename","onTrash","onToggle","__self","__source","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo/client/src/App.js"],"sourcesContent":["import  './App.css';\nimport  Task from './components/Task';\nimport  React from 'react';\nimport  TaskForm from './components/TaskForm';\nimport  { useEffect } from \"react\";\nimport  {useQuery,useMutation} from '@apollo/client'\nimport  {GET_TASKS,TASK_DONE,DELETE_TASK,UPDATE_TITLE} from './queries/query';\nimport  DropdownMenu from './components/navbar/dropdown'\nimport  Navbar from './components/navbar/nav'\nimport  Navitem from './components/navbar/item'\nimport  AddTask from './components/functions/AddTask'\nfunction App() {\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const { data: tasksData } = useQuery(GET_TASKS,{    \n    variables: {\n    token: currentUserToken,\n    userName: currentUserName\n  }\n});\n\n  const [updateTitleMutation] = useMutation(UPDATE_TITLE)\n  const [deletedTaskMutation] = useMutation(DELETE_TASK)\n  const [updateTaskDoneMutation] = useMutation(TASK_DONE)\n\n  const tasks = tasksData?.tasks ?? [];\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n  \n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    console.log('action from user:' + currentUserToken);\n  },[tasks]);\n\n  function removeTask(index) {\n    const taskId = tasksData.tasks[index].id; \n    deletedTaskMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken\n      },\n      update: (cache) => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.filter((task) => task.id !== taskId);\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: updatedTasks }\n        });\n      },\n    });\n  }\n  \n  function updateTaskDone(index, done) {\n    const taskId = tasksData.tasks[index].id;\n    updateTaskDoneMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        done:done\n      },\n      update: (cache) => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.map((task, i) => {\n          if (i === index) {\n            return { ...task, done };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: updatedTasks }\n        });\n      }\n    });\n  }\n  \n  function renameTasks(index, newName) {\n    const taskId = tasksData.tasks[index].id;\n    updateTitleMutation({\n      variables: {\n        id: taskId,\n        token: currentUserToken,\n        input: {\n          name: newName\n        }\n      },\n      update: (cache, { data }) => {\n        const existingTasks = cache.readQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          }\n        });\n        const updatedTasks = existingTasks.tasks.map(task => {\n          if (task.id === taskId) {\n            return { ...task, taskName: newName };\n          }\n          return task;\n        });\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: { tasks: updatedTasks }\n        });\n      }\n    }).catch(error => {\n      if (\n        error.message.includes('version_conflict_engine_exception') &&\n        error.message.includes('version conflict')\n      ) {\n      } else {\n        console.error(error);\n      }\n    });\n  }  \n\n  function getMessage() {\n    const percentage = numberTotal === 0 ? 0 : (numberComplete / numberTotal) * 100;\n    if (percentage === 0) {\n      return 'no tasks complete ðŸ˜¾';\n    }\n    if (percentage === 100) {\n      return 'nice job! ðŸ˜»';\n    }\n    return 'keep it up! ðŸ˜¼';\n  }\n\n    return (\n    <main>\n    <Navbar>\n      <Navitem>\n        <DropdownMenu/>\n      </Navitem>\n    </Navbar>\n      <h1>{numberComplete}/{numberTotal} Complete</h1>\n      <h2>{getMessage()}</h2>\n      <TaskForm onAdd={AddTask}/>\n      <div className=\"taskContainer\">\n        {tasks.map((task, index) => (\n          <Task\n            {...task}\n            key={index}\n            onRename={newName => renameTasks(index, newName)}\n            onTrash={() => removeTask(index)}\n            onToggle={done => updateTaskDone(index, done)}\n          />\n          ))}\n    </div>\n    </main>\n  )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}