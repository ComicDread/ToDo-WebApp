{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login/client/src/components/DeleteAll.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TASKS = gql`\n  query tasks($token: String!) {\n    tasks(token: $token) {\n      userName\n      token\n      taskName\n      done\n      id\n    }\n  }\n`;\nconst DELETE_TASKS = gql`\n  mutation DeleteAllTasks($id: [ID!]!, $token: String!) {\n    deleteAllTasks(id: $id, token: $token)\n  }\n`;\nexport default function ExpoButton() {\n  _s();\n  const [deleteAllTasksMutation] = useMutation(DELETE_TASKS);\n  const [showModal, setShowModal] = useState(false); // Stato per mostrare/nascondere il modal\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const {\n    data: tasksData\n  } = useQuery(GET_TASKS, {\n    variables: {\n      token: currentUserToken,\n      userName: currentUserName\n    }\n  });\n  async function removeAllTasks() {\n    setShowModal(false); // Nascondi il modal prima di procedere con l'eliminazione\n    const taskIds = tasksData.tasks.map(task => task.id);\n    await deleteAllTasksMutation({\n      variables: {\n        token: currentUserToken,\n        id: taskIds\n      },\n      update: cache => {\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName\n          },\n          data: {\n            tasks: []\n          }\n        });\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"DeleteAllButton\",\n      onClick: () => setShowModal(true),\n      children: \"Delete All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      onRequestClose: () => setShowModal(false),\n      contentLabel: \"Conferma eliminazione\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sei sicuro?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"L'azione \\xE8 irreversibile.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeAllTasks,\n        children: \"Elimina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(false),\n        children: \"Annulla\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpoButton, \"tAFmVguQV8/FyF6p0pWMGsy7vhI=\", false, function () {\n  return [useMutation, useQuery];\n});\n_c = ExpoButton;\nvar _c;\n$RefreshReg$(_c, \"ExpoButton\");","map":{"version":3,"names":["useState","useQuery","gql","useMutation","Modal","jsxDEV","_jsxDEV","GET_TASKS","DELETE_TASKS","ExpoButton","_s","deleteAllTasksMutation","showModal","setShowModal","currentUserToken","JSON","parse","localStorage","getItem","currentUserName","data","tasksData","variables","token","userName","removeAllTasks","taskIds","tasks","map","task","id","update","cache","writeQuery","query","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","contentLabel","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login/client/src/components/DeleteAll.js"],"sourcesContent":["import { useState } from 'react';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport Modal from 'react-modal';\n\nconst GET_TASKS = gql`\n  query tasks($token: String!) {\n    tasks(token: $token) {\n      userName\n      token\n      taskName\n      done\n      id\n    }\n  }\n`;\n\nconst DELETE_TASKS = gql`\n  mutation DeleteAllTasks($id: [ID!]!, $token: String!) {\n    deleteAllTasks(id: $id, token: $token)\n  }\n`;\n\n\nexport default function ExpoButton() {\n  const [deleteAllTasksMutation] = useMutation(DELETE_TASKS);\n  const [showModal, setShowModal] = useState(false); // Stato per mostrare/nascondere il modal\n  const currentUserToken = JSON.parse(localStorage.getItem('currentUser'));\n  const currentUserName = JSON.parse(localStorage.getItem('currentUserName'));\n  const { data: tasksData } = useQuery(GET_TASKS, {\n    variables: {\n      token: currentUserToken,\n      userName: currentUserName,\n    },\n  });\n\n  async function removeAllTasks() {\n    setShowModal(false); // Nascondi il modal prima di procedere con l'eliminazione\n    const taskIds = tasksData.tasks.map((task) => task.id);\n    await deleteAllTasksMutation({\n      variables: {\n        token: currentUserToken,\n        id: taskIds,\n      },\n      update: (cache) => {\n        cache.writeQuery({\n          query: GET_TASKS,\n          variables: {\n            token: currentUserToken,\n            userName: currentUserName,\n          },\n          data: { tasks: [] },\n        });\n      },\n    });\n  }\n\n  return (\n    <div>\n      <button className=\"DeleteAllButton\" onClick={() => setShowModal(true)}>\n        Delete All\n      </button>\n\n      {/* Modal per confermare l'eliminazione */}\n      <Modal\n        isOpen={showModal}\n        onRequestClose={() => setShowModal(false)}\n        contentLabel=\"Conferma eliminazione\"\n      >\n        <h2>Sei sicuro?</h2>\n        <p>L'azione Ã¨ irreversibile.</p>\n        <button onClick={removeAllTasks}>Elimina</button>\n        <button onClick={() => setShowModal(false)}>Annulla</button>\n      </Modal>\n    </div>\n  );\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}