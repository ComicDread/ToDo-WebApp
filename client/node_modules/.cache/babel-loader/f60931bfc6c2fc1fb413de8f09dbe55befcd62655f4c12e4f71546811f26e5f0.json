{"ast":null,"code":"var _jsxFileName = \"/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo 1.1/client/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport { gql } from '@apollo/client';\nimport client from '../index';\nimport userimage from './icons/UserImg.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHECK_USER = gql`\n  query CheckUser($_id: ID!) {\n    CheckUser(_id: $_id) {\n      _id\n      userName\n      password\n      email\n    }\n  }\n`;\nexport default function Login() {\n  _s();\n  const navigate = useNavigate();\n  const [currentUserUid, setCurrentUserUid] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState(null);\n  const [currentUserImg, setCurrentUserImg] = useState(null);\n  const [isUserRegistered, setIsUserRegistered] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const userImg = userimage;\n  const [showPasswordInput, setShowPasswordInput] = useState(false); // Aggiungiamo uno stato per mostrare/nascondere il campo di input della password\n\n  useEffect(() => {\n    console.log('user:' + currentUserUid);\n  }, []);\n  const handleSuccess = async credentialResponse => {\n    var decoded = jwt_decode(credentialResponse.credential);\n    const Uid = decoded.sub;\n    const {\n      data\n    } = await client.query({\n      query: CHECK_USER,\n      variables: {\n        _id: Uid\n      }\n    });\n    if (!data.CheckUser || data.CheckUser.password !== password) {\n      setIsUserRegistered(false);\n    } else {\n      localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n      localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n      localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n      localStorage.setItem('LoggedWithGoogle', JSON.stringify(true));\n      setIsUserRegistered(true);\n      navigate('/');\n    }\n  };\n  const handleUserData = async () => {\n    const _id = email;\n    const {\n      data\n    } = await client.query({\n      query: CHECK_USER,\n      variables: {\n        _id,\n        password\n      }\n    });\n    if (!data.CheckUser || data.CheckUser.password !== password) {\n      setIsUserRegistered(false);\n    } else {\n      const userName = data.CheckUser.userName;\n      localStorage.setItem('currentUser', JSON.stringify(_id));\n      localStorage.setItem('LoggedWithLocal', JSON.stringify(true));\n      localStorage.setItem('currentUserName', JSON.stringify(userName));\n      localStorage.setItem('currentUserImg', JSON.stringify(userImg));\n      setIsUserRegistered(true);\n      setShowPasswordInput(false); // Dopo aver effettuato l'accesso con successo, nascondiamo il campo della password\n      navigate('/');\n    }\n  };\n  const handleError = () => {\n    console.log('Login Failed');\n  };\n  const handleEmailSubmit = () => {\n    // Aggiungiamo questa funzione per controllare l'email e decidere se mostrare o meno il campo di input della password\n    const isValidEmail = email !== '';\n    setShowPasswordInput(isValidEmail);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), showPasswordInput &&\n    /*#__PURE__*/\n    // Mostriamo il campo di input della password solo se showPasswordInput è true\n    _jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input-field\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: showPasswordInput ?\n      /*#__PURE__*/\n      // Mostreremo il pulsante di login solo se il campo di input della password è visibile\n      _jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleUserData,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleEmailSubmit,\n        children: \"Check Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-text\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"google-label\",\n        children: \"O accedi con Google...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signInButton\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [isUserRegistered === false && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red',\n          position: 'absolute',\n          top: '9.15em'\n        },\n        children: \"Utente non registrato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n        clientId: \"1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleSuccess,\n          onError: handleError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"LAaJAbZPddedNW1s+mtzV2iSfEY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["GoogleLogin","GoogleOAuthProvider","jwt_decode","useState","useEffect","useNavigate","gql","client","userimage","jsxDEV","_jsxDEV","CHECK_USER","Login","_s","navigate","currentUserUid","setCurrentUserUid","currentUserName","setCurrentUserName","currentUserImg","setCurrentUserImg","isUserRegistered","setIsUserRegistered","email","setEmail","password","setPassword","userImg","showPasswordInput","setShowPasswordInput","console","log","handleSuccess","credentialResponse","decoded","credential","Uid","sub","data","query","variables","_id","CheckUser","localStorage","setItem","JSON","stringify","given_name","picture","handleUserData","userName","handleError","handleEmailSubmit","isValidEmail","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","id","style","display","justifyContent","alignItems","color","position","top","clientId","onSuccess","onError","_c","$RefreshReg$"],"sources":["/Users/andrea/Desktop/ITS Prodigi/Seacom/Application/Todo/Full Stack ToDo login elasticEmongo 1.1/client/src/components/Login.js"],"sourcesContent":["import { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { useState, useEffect } from 'react';\nimport './components.css';\nimport { useNavigate } from 'react-router-dom';\nimport  {gql} from '@apollo/client'\nimport client from '../index'\nimport userimage from './icons/UserImg.svg'\n\nconst CHECK_USER = gql`\n  query CheckUser($_id: ID!) {\n    CheckUser(_id: $_id) {\n      _id\n      userName\n      password\n      email\n    }\n  }\n`;\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const [currentUserUid, setCurrentUserUid] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState(null);\n  const [currentUserImg, setCurrentUserImg] = useState(null);\n  const [isUserRegistered, setIsUserRegistered] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const userImg = userimage;\n  const [showPasswordInput, setShowPasswordInput] = useState(false); // Aggiungiamo uno stato per mostrare/nascondere il campo di input della password\n\n  useEffect(() => {\n    console.log('user:' + currentUserUid);\n  }, []);\n\n  const handleSuccess = async (credentialResponse) => {\n    var decoded = jwt_decode(credentialResponse.credential);\n    const Uid = decoded.sub;\n    const { data } = await client.query({\n      query: CHECK_USER,\n      variables: { _id: Uid },\n    });\n    if (!data.CheckUser || data.CheckUser.password !== password) {\n      setIsUserRegistered(false);\n    } else {\n      localStorage.setItem('currentUser', JSON.stringify(decoded.sub));\n      localStorage.setItem('currentUserName', JSON.stringify(decoded.given_name));\n      localStorage.setItem('currentUserImg', JSON.stringify(decoded.picture));\n      localStorage.setItem('LoggedWithGoogle', JSON.stringify(true));\n      setIsUserRegistered(true);\n      navigate('/');\n    }\n  };\n\n  const handleUserData = async () => {\n    const _id = email;\n    const { data } = await client.query({\n      query: CHECK_USER,\n      variables: { _id, password },\n    });\n    if (!data.CheckUser || data.CheckUser.password !== password) {\n      setIsUserRegistered(false);\n    } else {\n      const userName = data.CheckUser.userName;\n      localStorage.setItem('currentUser', JSON.stringify(_id));\n      localStorage.setItem('LoggedWithLocal', JSON.stringify(true));\n      localStorage.setItem('currentUserName', JSON.stringify(userName));\n      localStorage.setItem('currentUserImg', JSON.stringify(userImg));\n      setIsUserRegistered(true);\n      setShowPasswordInput(false); // Dopo aver effettuato l'accesso con successo, nascondiamo il campo della password\n      navigate('/');\n    }\n  };\n\n  const handleError = () => {\n    console.log('Login Failed');\n  };\n\n  const handleEmailSubmit = () => {\n    // Aggiungiamo questa funzione per controllare l'email e decidere se mostrare o meno il campo di input della password\n    const isValidEmail = email !== '';\n    setShowPasswordInput(isValidEmail);\n  };\n\n  return (\n    <div>\n      <div className='input-container'>\n        <label className='input-label'>Email</label>\n        <input\n          type='text'\n          className='input-field'\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n      {showPasswordInput && ( // Mostriamo il campo di input della password solo se showPasswordInput è true\n        <div className='input-container'>\n          <label className='input-label'>Password</label>\n          <input\n            type='password'\n            className='input-field'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n      )}\n      <div className='button-container'>\n        {showPasswordInput ? ( // Mostreremo il pulsante di login solo se il campo di input della password è visibile\n          <button className='submit-button' onClick={handleUserData}>\n            Submit\n          </button>\n        ) : (\n          <button className='submit-button' onClick={handleEmailSubmit}>\n            Check Email\n          </button>\n        )}\n      </div>\n      <div className='center-text'>\n        <label className='google-label'>O accedi con Google...</label>\n      </div>\n      <div\n        id='signInButton'\n        style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n      >\n        {isUserRegistered === false && (\n          <p style={{ color: 'red', position: 'absolute', top: '9.15em' }}>\n            Utente non registrato\n          </p>\n        )}\n        <GoogleOAuthProvider clientId='1038509275601-a2gf0vtu5pt81as8586gt0hsqrqis0mh.apps.googleusercontent.com'>\n          <GoogleLogin onSuccess={handleSuccess} onError={handleError} />\n        </GoogleOAuthProvider>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}